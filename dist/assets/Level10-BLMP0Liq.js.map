{"version":3,"file":"Level10-BLMP0Liq.js","sources":["../../src/tracks/levels/Level10.js"],"sourcesContent":["/**\n * Level 10 - Apex\n * The ultimate digital challenge combining all elements\n */\n\nexport default {\n  name: \"Apex\",\n  description: \"The pinnacle of racing mastery in digital space\",\n  difficulty: 5,\n  shader: \"matrix-rain\", // Ultimate digital challenge\n  skybox: \"space-deep\", // Deep space for ultimate focus\n  \n  generateTrack(addSegment) {\n    // Starting section\n    for (let i = 0; i < 15; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: 0,\n        rollDelta: 0,\n        isStartLine: (i === 0)\n      });\n    }\n    \n    // Immediate split path with different challenges\n    for (let i = 0; i < 5; i++) {\n      const factor = i / 5;\n      addSegment({\n        lanes: [\n          { offset: -10 * factor, width: 8 },\n          { offset: 10 * factor, width: 8 }\n        ]\n      });\n    }\n    \n    // Left path: jump series, Right path: tight turns\n    for (let i = 0; i < 30; i++) {\n      if (i % 10 < 4) {\n        // Jump sections on left path\n        addSegment({\n          lanes: [\n            { offset: -10, width: 8 },\n            { offset: 10, width: 8 }\n          ],\n          pitchDelta: Math.PI / 30\n        });\n      } else if (i % 10 < 6) {\n        // Gap on left, turn on right\n        addSegment({\n          lanes: [\n            { offset: -10, width: 8, isGap: true },\n            { offset: 10, width: 8 }\n          ],\n          yawDelta: Math.PI / 40\n        });\n      } else {\n        // Landing on left, continue turn on right\n        addSegment({\n          lanes: [\n            { offset: -10, width: 8 },\n            { offset: 10, width: 8 }\n          ],\n          pitchDelta: -Math.PI / 30,\n          yawDelta: Math.PI / 40\n        });\n      }\n    }\n    \n    // Merge paths\n    for (let i = 0; i < 5; i++) {\n      const factor = 1 - (i / 5);\n      addSegment({\n        lanes: [\n          { offset: -10 * factor, width: 8 },\n          { offset: 10 * factor, width: 8 }\n        ]\n      });\n    }\n    \n    // Extreme banked hairpin turn\n    for (let i = 0; i < 5; i++) {\n      addSegment({ rollDelta: Math.PI / 40 });\n    }\n    for (let i = 0; i < 40; i++) {\n      addSegment({ \n        yawDelta: Math.PI / 20,  // Very tight turn\n        rollDelta: 0\n      });\n    }\n    for (let i = 0; i < 5; i++) {\n      addSegment({ rollDelta: -Math.PI / 40 });\n    }\n    \n    // FIXED: Manageable climb with boost zones instead of impossible steep angles\n    for (let i = 0; i < 40; i++) {\n      if (i % 8 < 3) {\n        // Narrow sections with boost\n        addSegment({\n          lanes: [{ offset: 0, width: 5 }],\n          pitchDelta: Math.PI / 80 // Much gentler climb\n        });\n      } else if (i % 8 < 5) {\n        // Boost sections for climbing\n        addSegment({\n          pitchDelta: Math.PI / 80\n        });\n      } else {\n        // Normal width\n        addSegment({\n          pitchDelta: Math.PI / 80 // Much gentler climb\n        });\n      }\n    }\n    \n    // The Big Drop - FIXED: Safer descent angles to prevent cliff effect\n    for (let i = 0; i < 8; i++) {\n      addSegment({ pitchDelta: -Math.PI / 200 * (i + 1) }); // Very gradual increasing angle\n    }\n    for (let i = 0; i < 25; i++) {\n      addSegment({ pitchDelta: -Math.PI / 40 }); // Safe maximum descent (45 degrees max)\n    }\n    for (let i = 0; i < 8; i++) {\n      addSegment({ pitchDelta: -Math.PI / 200 * (8 - i) }); // Level out gradually\n    }\n    \n    // Recovery chicane at high speed\n    for (let i = 0; i < 6; i++) {\n      addSegment({ yawDelta: -Math.PI / 30 });\n    }\n    for (let i = 0; i < 12; i++) {\n      addSegment({ yawDelta: Math.PI / 30 });\n    }\n    for (let i = 0; i < 6; i++) {\n      addSegment({ yawDelta: -Math.PI / 30 });\n    }\n    \n    // Final test - long jump with turn in mid-air\n    for (let i = 0; i < 15; i++) {\n      addSegment({ \n        pitchDelta: Math.PI / 30,\n        yawDelta: -Math.PI / 200,  // Slight left curve on ramp\n        isBoost: (i >= 10 && i <= 14)  // Speed pads at top of ramp\n      });\n    }\n    for (let i = 0; i < 8; i++) {\n      addSegment({ isGap: true }); // Longest jump in the game!\n    }\n    for (let i = 0; i < 15; i++) {\n      addSegment({ \n        pitchDelta: -Math.PI / 30,\n        yawDelta: -Math.PI / 200,  // Continue curve on landing\n        isBoost: (i >= 12 && i <= 14)  // Speed pads near end of landing\n      });\n    }\n    \n    // Victory straight\n    for (let i = 0; i < 30; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: 0,\n        rollDelta: 0,\n        isFinishLine: (i === 29)\n      });\n    }\n  }\n};"],"names":["Level10","addSegment","i","factor"],"mappings":"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"}