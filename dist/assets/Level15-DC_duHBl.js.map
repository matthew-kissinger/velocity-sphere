{"version":3,"file":"Level15-DC_duHBl.js","sources":["../../src/tracks/levels/Level15.js"],"sourcesContent":["/**\n * Level 15 - Cloud Nine\n * Sky-high cloud racing with ethereal jumps\n * Medium difficulty with floating platform elements\n */\n\nexport default {\n  name: \"Cloud Nine\",\n  description: \"Float through the clouds in this heavenly race\",\n  difficulty: 3,\n  shader: \"cloud-surface\", // High contrast cloud shader\n  skybox: \"aurora-dance\",\n  \n  generateTrack(addSegment) {\n    // Cloud entrance - floating start with gentle curves\n    for (let i = 0; i < 20; i++) {\n      addSegment({\n        yawDelta: Math.sin(i * 0.15) * Math.PI / 100,\n        pitchDelta: Math.sin(i * 0.1) * Math.PI / 200, // Very gentle undulation\n        rollDelta: Math.cos(i * 0.15) * Math.PI / 150,\n        isStartLine: (i === 0),\n        isBoost: (i === 15) // Boost to start the action\n      });\n    }\n    \n    // Cloud drops and flow - speed focused\n    for (let drop = 0; drop < 4; drop++) {\n      // Gentle approach\n      for (let i = 0; i < 8; i++) {\n        addSegment({\n          pitchDelta: 0,\n          yawDelta: Math.sin(i * 0.2 + drop) * Math.PI / 80,\n          rollDelta: Math.cos(i * 0.2) * Math.PI / 150\n        });\n      }\n      \n      // Removed unnecessary bounce pad before drop\n      \n      // Thrilling drop through clouds - made less steep\n      for (let i = 0; i < 15; i++) {\n        addSegment({\n          pitchDelta: -Math.PI / 50, // Less steep drop (was /40)\n          yawDelta: Math.sin(i * 0.1) * Math.PI / 100\n          // Removed speed pads from drop - gravity provides speed\n        });\n      }\n      \n      // Recovery and flow\n      for (let i = 0; i < 10; i++) {\n        addSegment({\n          pitchDelta: i < 5 ? Math.PI / 80 : 0, // Gentle recovery\n          yawDelta: Math.PI / 120,\n          rollDelta: (drop % 2 ? 1 : -1) * Math.PI / 100\n        });\n      }\n    }\n    \n    // Cloud hopping section - multiple jumps\n    for (let hop = 0; hop < 5; hop++) {\n      // Add boost powerup before climb\n      if (hop === 0 || hop === 2) {\n        addSegment({\n          isBoostPowerup: true\n        });\n      }\n      \n      // Approach cloud\n      for (let i = 0; i < 6; i++) {\n        addSegment({\n          pitchDelta: Math.PI / 50 // More manageable angle\n          // Removed speed pads from climb - use boost powerups instead\n        });\n      }\n      // Gap between clouds\n      for (let i = 0; i < 3 + hop; i++) { // Gaps get longer\n        addSegment({ isGap: true });\n      }\n      // Landing cloud\n      for (let i = 0; i < 6; i++) {\n        addSegment({ pitchDelta: -Math.PI / 45 });\n      }\n      // Cloud surface\n      for (let i = 0; i < 5; i++) {\n        addSegment({ \n          yawDelta: hop % 2 ? Math.PI / 80 : -Math.PI / 80\n        });\n      }\n    }\n    \n    // Wind current section - flowing curves\n    const windCurrents = [\n      { angle: Math.PI / 2, segments: 25, lift: true },\n      { angle: -Math.PI / 1.8, segments: 30, lift: false },\n      { angle: Math.PI / 2.5, segments: 20, lift: true }\n    ];\n    \n    for (const current of windCurrents) {\n      for (let i = 0; i < current.segments; i++) {\n        const progress = i / current.segments;\n        addSegment({\n          yawDelta: current.angle / current.segments,\n          pitchDelta: current.lift ? \n            Math.sin(progress * Math.PI) * Math.PI / 100 : \n            -Math.sin(progress * Math.PI) * Math.PI / 100,\n          rollDelta: Math.sin(progress * Math.PI) * Math.PI / 60 * (current.angle > 0 ? 1 : -1)\n        });\n      }\n    }\n    \n    // Rainbow bridge finale\n    for (let i = 0; i < 30; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: Math.sin(i * 0.2) * Math.PI / 150,\n        rollDelta: 0,\n        isBoost: (i >= 15 && i <= 20),\n        isFinishLine: (i === 29)\n      });\n    }\n  }\n};"],"names":["Level15","addSegment","i","drop","hop","windCurrents","current","progress"],"mappings":"AAMA,MAAAA,EAAe,CACb,KAAM,aACN,YAAa,iDACb,WAAY,EACZ,OAAQ,gBACR,OAAQ,eAER,cAAcC,EAAY,CAExB,QAASC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,SAAU,KAAK,IAAIC,EAAI,GAAI,EAAI,KAAK,GAAK,IACzC,WAAY,KAAK,IAAIA,EAAI,EAAG,EAAI,KAAK,GAAK,IAC1C,UAAW,KAAK,IAAIA,EAAI,GAAI,EAAI,KAAK,GAAK,IAC1C,YAAcA,IAAM,EACpB,QAAUA,IAAM,EACxB,CAAO,EAIH,QAASC,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CAEnC,QAASD,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAW,CACT,WAAY,EACZ,SAAU,KAAK,IAAIC,EAAI,GAAMC,CAAI,EAAI,KAAK,GAAK,GAC/C,UAAW,KAAK,IAAID,EAAI,EAAG,EAAI,KAAK,GAAK,GACnD,CAAS,EAMH,QAASA,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,WAAY,CAAC,KAAK,GAAK,GACvB,SAAU,KAAK,IAAIC,EAAI,EAAG,EAAI,KAAK,GAAK,GAElD,CAAS,EAIH,QAASA,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,WAAYC,EAAI,EAAI,KAAK,GAAK,GAAK,EACnC,SAAU,KAAK,GAAK,IACpB,WAAYC,EAAO,EAAI,EAAI,IAAM,KAAK,GAAK,GACrD,CAAS,CAEL,CAGA,QAASC,EAAM,EAAGA,EAAM,EAAGA,IAAO,EAE5BA,IAAQ,GAAKA,IAAQ,IACvBH,EAAW,CACT,eAAgB,EAC1B,CAAS,EAIH,QAASC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAW,CACT,WAAY,KAAK,GAAK,EAEhC,CAAS,EAGH,QAASC,EAAI,EAAGA,EAAI,EAAIE,EAAKF,IAC3BD,EAAW,CAAE,MAAO,GAAM,EAG5B,QAASC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAW,CAAE,WAAY,CAAC,KAAK,GAAK,EAAE,CAAE,EAG1C,QAASC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAW,CACT,SAAUG,EAAM,EAAI,KAAK,GAAK,GAAK,CAAC,KAAK,GAAK,EACxD,CAAS,CAEL,CAGA,MAAMC,EAAe,CACnB,CAAE,MAAO,KAAK,GAAK,EAAG,SAAU,GAAI,KAAM,EAAI,EAC9C,CAAE,MAAO,CAAC,KAAK,GAAK,IAAK,SAAU,GAAI,KAAM,EAAK,EAClD,CAAE,MAAO,KAAK,GAAK,IAAK,SAAU,GAAI,KAAM,EAAI,CACtD,EAEI,UAAWC,KAAWD,EACpB,QAASH,EAAI,EAAGA,EAAII,EAAQ,SAAUJ,IAAK,CACzC,MAAMK,EAAWL,EAAII,EAAQ,SAC7BL,EAAW,CACT,SAAUK,EAAQ,MAAQA,EAAQ,SAClC,WAAYA,EAAQ,KAClB,KAAK,IAAIC,EAAW,KAAK,EAAE,EAAI,KAAK,GAAK,IACzC,CAAC,KAAK,IAAIA,EAAW,KAAK,EAAE,EAAI,KAAK,GAAK,IAC5C,UAAW,KAAK,IAAIA,EAAW,KAAK,EAAE,EAAI,KAAK,GAAK,IAAMD,EAAQ,MAAQ,EAAI,EAAI,GAC5F,CAAS,CACH,CAIF,QAASJ,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,SAAU,EACV,WAAY,KAAK,IAAIC,EAAI,EAAG,EAAI,KAAK,GAAK,IAC1C,UAAW,EACX,QAAUA,GAAK,IAAMA,GAAK,GAC1B,aAAeA,IAAM,EAC7B,CAAO,CAEL,CACF"}