{"version":3,"file":"Level15-DZma4cj9.js","sources":["../../src/tracks/levels/Level15.js"],"sourcesContent":["/**\n * Level 15 - Cloud Nine (COMPLETELY REDESIGNED)\n * Flowing cloud racing with smooth curves and gentle jumps\n * Medium difficulty with emphasis on flow and speed\n */\n\nexport default {\n  name: \"Cloud Nine\",\n  description: \"Float through the clouds in this heavenly race\",\n  difficulty: 3,\n  shader: \"cloud-surface\",\n  skybox: \"aurora-dance\",\n  \n  generateTrack(addSegment) {\n    // Cloud entrance - wide floating start\n    for (let i = 0; i < 25; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: 0,\n        rollDelta: 0,\n        isStartLine: (i === 0),\n        lanes: [{ offset: 0, width: 12 }]\n      });\n    }\n    \n    // SECTION 1: Cloud Wave Racing\n    // Flowing S-curves through clouds\n    const cloudWaves = [\n      { angle: Math.PI / 3, segments: 30, climb: false },\n      { angle: -Math.PI / 2.5, segments: 35, climb: true },\n      { angle: Math.PI / 2.8, segments: 28, climb: false },\n      { angle: -Math.PI / 3, segments: 25, climb: true }\n    ];\n    \n    for (const wave of cloudWaves) {\n      // Smooth banking into turn\n      for (let i = 0; i < 5; i++) {\n        addSegment({\n          rollDelta: (wave.angle > 0 ? 1 : -1) * Math.PI / 100,\n          lanes: [{ offset: 0, width: 10 }]\n        });\n      }\n      \n      // Flowing turn with gentle elevation changes\n      for (let i = 0; i < wave.segments; i++) {\n        const progress = i / wave.segments;\n        addSegment({\n          yawDelta: wave.angle / wave.segments,\n          pitchDelta: wave.climb ? \n            Math.sin(progress * Math.PI) * Math.PI / 150 : \n            -Math.sin(progress * Math.PI) * Math.PI / 200,\n          rollDelta: 0,\n          lanes: [{ offset: 0, width: 9 }]\n        });\n      }\n      \n      // Exit banking\n      for (let i = 0; i < 5; i++) {\n        addSegment({\n          rollDelta: (wave.angle > 0 ? -1 : 1) * Math.PI / 100,\n          lanes: [{ offset: 0, width: 10 }]\n        });\n      }\n      \n      // Straight recovery\n      for (let i = 0; i < 8; i++) {\n        addSegment({\n          yawDelta: 0,\n          pitchDelta: 0,\n          rollDelta: 0\n        });\n      }\n    }\n    \n    // SECTION 2: Cloud Speedway\n    // Fast straight with gentle hills\n    for (let i = 0; i < 40; i++) {\n      const hillPhase = i / 40;\n      addSegment({\n        yawDelta: Math.sin(i * 0.05) * Math.PI / 200, // Very gentle weaving\n        pitchDelta: Math.sin(hillPhase * Math.PI * 2) * Math.PI / 100,\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 11 }]\n      });\n    }\n    \n    // SECTION 3: Rainbow Run\n    // Colorful curved descent through clouds\n    for (let i = 0; i < 50; i++) {\n      const rainbowPhase = i / 50;\n      addSegment({\n        yawDelta: Math.PI / 100, // Gentle continuous turn\n        pitchDelta: -Math.PI / 180, // Very gentle descent\n        rollDelta: Math.PI / 150, // Slight banking\n        lanes: [{ \n          offset: Math.sin(rainbowPhase * Math.PI * 2) * 2, \n          width: 10 \n        }]\n      });\n    }\n    \n    // SECTION 4: Cloud Gardens\n    // Wide sweeping turns through cloud formations\n    for (let garden = 0; garden < 3; garden++) {\n      // Garden entrance\n      for (let i = 0; i < 10; i++) {\n        addSegment({\n          yawDelta: 0,\n          pitchDelta: 0,\n          rollDelta: 0,\n          lanes: [{ offset: 0, width: 12 }]\n        });\n      }\n      \n      // Circular garden path\n      const gardenDir = garden % 2 ? 1 : -1;\n      for (let i = 0; i < 20; i++) {\n        addSegment({\n          yawDelta: gardenDir * Math.PI / 20, // 180Â° turn\n          pitchDelta: Math.sin(i * 0.3) * Math.PI / 200,\n          rollDelta: gardenDir * Math.PI / 80,\n          lanes: [{ offset: 0, width: 10 }]\n        });\n      }\n    }\n    \n    // SECTION 5: Sunset Sprint\n    // Final high-speed section\n    for (let i = 0; i < 30; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: i < 15 ? -Math.PI / 150 : Math.PI / 150, // Gentle dip and rise\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 12 }]\n      });\n    }\n    \n    // Cloud plaza finish\n    for (let i = 0; i < 20; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: 0,\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 14 }],\n        isFinishLine: (i === 19)\n      });\n    }\n  }\n};"],"names":["Level15","addSegment","i","cloudWaves","wave","progress","hillPhase","rainbowPhase","garden","gardenDir"],"mappings":"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"}