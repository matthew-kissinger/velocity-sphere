{"version":3,"file":"Level18-D8oYaBso.js","sources":["../../src/tracks/levels/Level18.js"],"sourcesContent":["/**\n * Level 18 - Magma Core\n * Deep earth core racing with lava flows\n * EXTREME difficulty with advanced movement techniques required\n */\n\nexport default {\n  name: \"Magma Core\",\n  description: \"Race through the molten heart of the earth\",\n  difficulty: 6, // Moved to extreme difficulty\n  shader: \"lava-flow\",\n  skybox: \"lava-storm\",\n  \n  generateTrack(addSegment) {\n    // Start at surface level - volcanic rim\n    for (let i = 0; i < 15; i++) {\n      addSegment({\n        yawDelta: Math.sin(i * 0.2) * Math.PI / 100,\n        pitchDelta: 0,\n        rollDelta: 0,\n        isStartLine: (i === 0)\n      });\n    }\n    \n    // Lava tube entrance - winding tunnel\n    for (let i = 0; i < 30; i++) {\n      addSegment({\n        yawDelta: Math.sin(i * 0.15) * Math.PI / 35,\n        pitchDelta: Math.cos(i * 0.1) * Math.PI / 90,\n        lanes: [{ offset: 0, width: 8 }] // Tube width\n      });\n    }\n    \n    // Magma chamber - multiple lava flows to avoid\n    // Three parallel paths between lava flows\n    for (let i = 0; i < 5; i++) {\n      const factor = i / 5;\n      addSegment({\n        lanes: [\n          { offset: -10 * factor, width: 5 },\n          { offset: 0, width: 6 },\n          { offset: 10 * factor, width: 5 }\n        ]\n      });\n    }\n    \n    // Navigate between active lava flows\n    for (let i = 0; i < 40; i++) {\n      const lavaPattern = Math.sin(i * 0.1) * 0.5 + 0.5;\n      \n      if (i % 10 < 5) {\n        // Lava surges - paths temporarily blocked\n        addSegment({\n          lanes: [\n            { offset: -10, width: 5, isGap: lavaPattern > 0.7 },\n            { offset: 0, width: 6 },\n            { offset: 10, width: 5, isGap: lavaPattern < 0.3 }\n          ],\n          pitchDelta: Math.sin(i * 0.2) * Math.PI / 120\n        });\n      } else {\n        // Safe passages\n        addSegment({\n          lanes: [\n            { offset: -10, width: 5 },\n            { offset: 0, width: 6 },\n            { offset: 10, width: 5 }\n          ],\n          pitchDelta: Math.sin(i * 0.2) * Math.PI / 120\n        });\n      }\n    }\n    \n    // Merge paths\n    for (let i = 0; i < 5; i++) {\n      const factor = 1 - (i / 5);\n      addSegment({\n        lanes: [\n          { offset: -10 * factor, width: 5 },\n          { offset: 0, width: 6 },\n          { offset: 10 * factor, width: 5 }\n        ]\n      });\n    }\n    \n    // Geothermal vent section - periodic eruptions\n    for (let vent = 0; vent < 5; vent++) {\n      // Approach vent\n      for (let i = 0; i < 8; i++) {\n        addSegment({\n          yawDelta: 0,\n          pitchDelta: 0\n        });\n      }\n      \n      // Vent eruption jump\n      for (let i = 0; i < 6; i++) {\n        addSegment({\n          pitchDelta: Math.PI / 35,\n          // No boost needed - natural momentum from jump\n        });\n      }\n      \n      // Airborne over lava\n      for (let i = 0; i < 3 + vent; i++) { // Gaps get longer\n        addSegment({ isGap: true });\n      }\n      \n      // Landing\n      for (let i = 0; i < 6; i++) {\n        addSegment({ pitchDelta: -Math.PI / 35 });\n      }\n    }\n    \n    // Molten metal river - following flow\n    const riverBends = [\n      { angle: Math.PI / 2.5, segments: 25, descend: true },\n      { angle: -Math.PI / 2, segments: 30, descend: false },\n      { angle: Math.PI / 3, segments: 20, descend: true }\n    ];\n    \n    for (const bend of riverBends) {\n      for (let i = 0; i < bend.segments; i++) {\n        const progress = i / bend.segments;\n        addSegment({\n          yawDelta: bend.angle / bend.segments,\n          pitchDelta: bend.descend ? -Math.PI / 120 : Math.PI / 150,\n          rollDelta: Math.sin(progress * Math.PI) * Math.PI / 40 * (bend.angle > 0 ? 1 : -1),\n          isBoost: (i === 10 && bend.angle > 0) // Only boost on right turns for path choice\n        });\n      }\n    }\n    \n    // Core chamber - descending spiral around magma spouts\n    for (let spout = 0; spout < 4; spout++) {\n      // Spiral descent around magma column\n      for (let i = 0; i < 15; i++) {\n        addSegment({\n          yawDelta: Math.PI / 20, // Tight spiral\n          pitchDelta: -Math.PI / 60, // Continuous descent\n          rollDelta: Math.PI / 50, // Banking into turn\n          lanes: [{ offset: 0, width: 9 }]\n        });\n      }\n      \n      // Drop between levels\n      for (let i = 0; i < 5; i++) {\n        addSegment({ \n          pitchDelta: -Math.PI / 30,\n          // Natural drop momentum\n        });\n      }\n      \n      // Recovery arc\n      for (let i = 0; i < 5; i++) {\n        addSegment({ pitchDelta: Math.PI / 60 });\n      }\n    }\n    \n    // Lava river finale - challenging but fair descent\n    for (let i = 0; i < 30; i++) {\n      const riverCurve = Math.sin(i * 0.15) * Math.PI / 45;\n      addSegment({\n        yawDelta: riverCurve,\n        pitchDelta: -Math.PI / 60, // More manageable descent\n        rollDelta: riverCurve * 0.4, // Less extreme banking\n        isBoost: (i === 15), // Single strategic boost mid-section\n        lanes: [{ offset: Math.sin(i * 0.2) * 1.5, width: 8 }], // Slightly less variation\n      });\n    }\n    \n    // Final approach - level out for finish\n    for (let i = 0; i < 15; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: i < 5 ? -Math.PI / 100 : 0, // Gentle level out\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 10 }], // Wider for finish\n        isBoost: (i >= 5 && i <= 10), // Final boost\n        isFinishLine: (i === 14)\n      });\n    }\n  }\n};"],"names":["Level18","addSegment","i","factor","lavaPattern","vent","riverBends","bend","progress","spout","riverCurve"],"mappings":"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"}