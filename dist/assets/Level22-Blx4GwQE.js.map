{"version":3,"file":"Level22-Blx4GwQE.js","sources":["../../src/tracks/levels/Level22.js"],"sourcesContent":["/**\n * Level 22 - Big Air\n * Epic ski jump level - build speed and stick the landing!\n * Performance optimized with no dynamic offsets\n */\n\nexport default {\n  name: \"Big Air\",\n  description: \"Launch off the ultimate ski jump and stick the landing\",\n  difficulty: 3,\n  shader: \"storm-electric\",\n  skybox: \"storm-clouds\",\n  \n  generateTrack(addSegment) {\n    // Starting straight - build initial speed\n    for (let i = 0; i < 15; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: 0,\n        rollDelta: 0,\n        isStartLine: (i === 0),\n        lanes: [{ offset: 0, width: 12 }]\n      });\n    }\n    \n    // Pre-jump approach - gentle turns to line up\n    for (let i = 0; i < 20; i++) {\n      const approachCurve = Math.sin((i / 20) * Math.PI * 2) * 0.3;\n      \n      addSegment({\n        yawDelta: approachCurve * Math.PI / 100,\n        pitchDelta: 0,\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 11 }]\n      });\n    }\n    \n    // Speed buildup zone - no boost needed, natural momentum\n    for (let i = 0; i < 12; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: 0,\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 12 }]\n      });\n    }\n    \n    // The jump ramp - gradual then steep\n    // Gradual build-up\n    for (let i = 0; i < 15; i++) {\n      const rampAngle = (i / 15) * Math.PI / 40; // Gradual increase\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: rampAngle,\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 11 }]\n      });\n    }\n    \n    // Steep ramp - final launch\n    for (let i = 0; i < 8; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: Math.PI / 25, // Steep launch angle\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 10 }]\n      });\n    }\n    \n    // THE BIG AIR - massive gap\n    for (let i = 0; i < 12; i++) {\n      addSegment({ isGap: true });\n    }\n    \n    // Landing zone - wide and forgiving\n    for (let i = 0; i < 15; i++) {\n      const landingAngle = i < 5 ? -Math.PI / 30 : 0; // Gentle landing slope\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: landingAngle,\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 16 }] // Extra wide for easier landing\n      });\n    }\n    \n    // Post-landing flow section\n    for (let i = 0; i < 25; i++) {\n      const flowCurve = Math.sin((i / 25) * Math.PI * 1.5);\n      \n      addSegment({\n        yawDelta: flowCurve * Math.PI / 80,\n        pitchDelta: 0,\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 12 }]\n      });\n    }\n    \n    // Double jump section - skill test\n    // First jump - smaller\n    for (let i = 0; i < 6; i++) {\n      addSegment({\n        pitchDelta: i > 3 ? Math.PI / 60 : 0,\n        lanes: [{ offset: 0, width: 11 }]\n      });\n    }\n    \n    for (let i = 0; i < 3; i++) {\n      addSegment({ isGap: true });\n    }\n    \n    // Short landing\n    for (let i = 0; i < 4; i++) {\n      addSegment({\n        pitchDelta: i < 2 ? -Math.PI / 80 : 0,\n        lanes: [{ offset: 0, width: 12 }]\n      });\n    }\n    \n    // Second jump - bigger\n    for (let i = 0; i < 8; i++) {\n      addSegment({\n        pitchDelta: i > 5 ? Math.PI / 45 : 0,\n        lanes: [{ offset: 0, width: 10 }]\n      });\n    }\n    \n    for (let i = 0; i < 5; i++) {\n      addSegment({ isGap: true });\n    }\n    \n    // Final landing\n    for (let i = 0; i < 10; i++) {\n      addSegment({\n        pitchDelta: i < 4 ? -Math.PI / 50 : 0,\n        lanes: [{ offset: 0, width: 14 }]\n      });\n    }\n    \n    // Celebration sweeper - banked victory lap\n    // Bank in\n    addSegment({ rollDelta: Math.PI / 8 });\n    \n    // Sweeping turn\n    for (let i = 0; i < 20; i++) {\n      addSegment({\n        yawDelta: Math.PI / 40,\n        pitchDelta: 0,\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 12 }]\n      });\n    }\n    \n    // Bank out\n    addSegment({ rollDelta: -Math.PI / 8 });\n    \n    // Final straight to finish - with elevation gain to ensure finish line is above reset level\n    for (let i = 0; i < 15; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: i < 8 ? Math.PI / 120 : 0, // Gentle climb to safe elevation\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 14 }],\n        isFinishLine: (i === 14)\n      });\n    }\n  }\n};"],"names":["Level22","addSegment","i","approachCurve","rampAngle","landingAngle","flowCurve"],"mappings":"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"}