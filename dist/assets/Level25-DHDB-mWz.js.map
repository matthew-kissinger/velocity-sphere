{"version":3,"file":"Level25-DHDB-mWz.js","sources":["../../src/tracks/levels/Level25.js"],"sourcesContent":["/**\r\n * Level 25 - Volcanic Ascent  \r\n * Climb up a volcano's interior with lava eruption timing\r\n * No corkscrews, proper boost placement\r\n */\r\n\r\nexport default {\r\n  name: \"Volcanic Ascent\",\r\n  description: \"Ascend through an active volcano's challenging terrain\",\r\n  difficulty: 4,\r\n  shader: \"lava-flow\",\r\n  skybox: \"lava-storm\",\r\n  \r\n  generateTrack(addSegment) {\r\n    // Volcanic base - approach\r\n    for (let i = 0; i < 20; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        isStartLine: (i === 0),\r\n        lanes: [{ offset: 0, width: 11 }]\r\n      });\r\n    }\r\n    \r\n    // Enter volcanic crater - gentle descent\r\n    for (let i = 0; i < 25; i++) {\r\n      addSegment({\r\n        yawDelta: Math.PI / 120,\r\n        pitchDelta: -Math.PI / 120,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 10 }]\r\n      });\r\n    }\r\n    \r\n    // Lava lake crossing - timing challenge\r\n    for (let section = 0; section < 3; section++) {\r\n      // Safe platform\r\n      for (let i = 0; i < 10; i++) {\r\n        addSegment({\r\n          yawDelta: 0,\r\n          pitchDelta: 0,\r\n          lanes: [{ offset: 0, width: 12 }],\r\n          isBoostPowerup: (i === 5 && section === 1)\r\n        });\r\n      }\r\n      \r\n      // Lava bubble pattern - predictable\r\n      for (let i = 0; i < 15; i++) {\r\n        const safeLeft = i % 6 < 3;\r\n        const safeRight = i % 6 >= 3;\r\n        \r\n        addSegment({\r\n          lanes: [\r\n            { offset: -6, width: 5, isGap: !safeLeft },\r\n            { offset: 0, width: 6 }, // Center always safe\r\n            { offset: 6, width: 5, isGap: !safeRight }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Begin volcanic ascent - spiraling up\r\n    for (let spiral = 0; spiral < 2; spiral++) {\r\n      // Recovery section before spiral\r\n      for (let i = 0; i < 10; i++) {\r\n        addSegment({\r\n          yawDelta: 0,\r\n          pitchDelta: 0,\r\n          rollDelta: 0,\r\n          lanes: [{ offset: 0, width: 10 }]\r\n        });\r\n      }\r\n      \r\n      // Spiral up the volcano wall\r\n      for (let i = 0; i < 35; i++) {\r\n        addSegment({\r\n          yawDelta: (Math.PI * 1.5) / 35, // 270Â° turn\r\n          pitchDelta: Math.PI / 120, // Gradual climb\r\n          rollDelta: Math.PI / 80, // Moderate bank\r\n          lanes: [{ offset: 0, width: 8 }],\r\n          isBoost: (i === 20 && spiral === 0)\r\n        });\r\n      }\r\n      \r\n      // Platform between spirals\r\n      if (spiral < 1) {\r\n        for (let i = 0; i < 12; i++) {\r\n          addSegment({\r\n            yawDelta: 0,\r\n            pitchDelta: 0,\r\n            rollDelta: -Math.PI / 120, // Unbank\r\n            lanes: [{ offset: 0, width: 11 }]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Lava vent jumps - controlled gaps\r\n    for (let vent = 0; vent < 3; vent++) {\r\n      // Approach\r\n      for (let i = 0; i < 10; i++) {\r\n        addSegment({\r\n          pitchDelta: i > 6 ? Math.PI / 60 : 0,\r\n          yawDelta: 0,\r\n          lanes: [{ offset: 0, width: 9 }]\r\n        });\r\n      }\r\n      \r\n      // Thermal updraft launch\r\n      addSegment({ isBouncePad: true });\r\n      \r\n      // Airborne\r\n      for (let i = 0; i < 3 + vent; i++) {\r\n        addSegment({ isGap: true });\r\n      }\r\n      \r\n      // Landing\r\n      for (let i = 0; i < 8; i++) {\r\n        addSegment({ \r\n          pitchDelta: i < 4 ? -Math.PI / 50 : 0,\r\n          lanes: [{ offset: 0, width: 10 }]\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Volcanic rim traverse - along the edge\r\n    for (let i = 0; i < 40; i++) {\r\n      const edgeWobble = Math.sin(i * 0.15) * 0.5;\r\n      \r\n      addSegment({\r\n        yawDelta: Math.sin(i * 0.08) * Math.PI / 100,\r\n        pitchDelta: Math.cos(i * 0.1) * Math.PI / 150,\r\n        rollDelta: 0, // No rolling on narrow edge\r\n        lanes: [{ \r\n          offset: edgeWobble, \r\n          width: 7 // Narrow edge\r\n        }],\r\n        isBoostPowerup: (i === 20)\r\n      });\r\n    }\r\n    \r\n    // Magma chamber descent - controlled drop\r\n    for (let i = 0; i < 30; i++) {\r\n      const descentPhase = i / 30;\r\n      \r\n      addSegment({\r\n        yawDelta: Math.PI / 100, // Gentle spiral down\r\n        pitchDelta: -Math.PI / 80, // Controlled descent\r\n        rollDelta: Math.PI / 120, // Slight bank\r\n        lanes: [{ \r\n          offset: 0, \r\n          width: 8 + descentPhase * 2 // Widening\r\n        }]\r\n      });\r\n    }\r\n    \r\n    // Recovery section\r\n    for (let i = 0; i < 15; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 11 }],\r\n        isBoost: (i >= 8 && i <= 12)\r\n      });\r\n    }\r\n    \r\n    // Final lava flow section - following the flow\r\n    for (let i = 0; i < 50; i++) {\r\n      const flowCurve = Math.sin(i * 0.1);\r\n      \r\n      addSegment({\r\n        yawDelta: flowCurve * Math.PI / 60,\r\n        pitchDelta: -Math.PI / 150, // Gentle descent\r\n        rollDelta: flowCurve * Math.PI / 100,\r\n        lanes: [{ \r\n          offset: flowCurve * 2, \r\n          width: 9 \r\n        }],\r\n        isBoost: (i === 25)\r\n      });\r\n    }\r\n    \r\n    // Volcanic escape - straight sprint\r\n    for (let i = 0; i < 30; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 12 }],\r\n        isBoost: (i >= 18 && i <= 24),\r\n        isFinishLine: (i === 29)\r\n      });\r\n    }\r\n  }\r\n};"],"names":["Level25","addSegment","i","section","safeLeft","safeRight","spiral","vent","edgeWobble","descentPhase","flowCurve"],"mappings":"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"}