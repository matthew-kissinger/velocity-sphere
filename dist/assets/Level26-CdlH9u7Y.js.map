{"version":3,"file":"Level26-CdlH9u7Y.js","sources":["../../src/tracks/levels/Level26.js"],"sourcesContent":["/**\r\n * Level 26 - Time Warp\r\n * Temporal distortions with HEAVILY optimized design\r\n * Reduced segments and removed unnecessary roll changes for 60+ FPS\r\n */\r\n\r\nexport default {\r\n  name: \"Time Warp\",\r\n  description: \"Navigate through temporal distortions\",\r\n  difficulty: 5,\r\n  shader: \"matrix-rain\",\r\n  skybox: \"space-deep\",\r\n  \r\n  generateTrack(addSegment) {\r\n    // Temporal entry - stable start\r\n    for (let i = 0; i < 15; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        isStartLine: (i === 0),\r\n        lanes: [{ offset: 0, width: 10 }]\r\n      });\r\n    }\r\n    \r\n    // Time distortion waves - OPTIMIZED: fewer segments, no roll\r\n    for (let i = 0; i < 15; i++) {\r\n      const timeWave = Math.sin(i * 0.24) * 0.5;\r\n      \r\n      addSegment({\r\n        yawDelta: timeWave * Math.PI / 90,\r\n        pitchDelta: Math.cos(i * 0.3) * Math.PI / 150,\r\n        rollDelta: 0, // REMOVED roll for performance\r\n        lanes: [{ offset: 0, width: 9 }]\r\n      });\r\n    }\r\n    \r\n    // Chronos turn 1 - OPTIMIZED: single banked segment\r\n    for (let i = 0; i < 2; i++) {\r\n      addSegment({ rollDelta: Math.PI / 12 });\r\n    }\r\n    \r\n    for (let i = 0; i < 10; i++) {\r\n      addSegment({\r\n        yawDelta: Math.PI / 20,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 10 }]\r\n      });\r\n    }\r\n    \r\n    for (let i = 0; i < 2; i++) {\r\n      addSegment({ rollDelta: -Math.PI / 12 });\r\n    }\r\n    \r\n    // Stabilization straight\r\n    for (let i = 0; i < 10; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 10 }],\r\n        isBoostPowerup: (i === 5)\r\n      });\r\n    }\r\n    \r\n    // Time skip section - simple gaps\r\n    for (let skip = 0; skip < 2; skip++) {\r\n      // Approach\r\n      for (let i = 0; i < 8; i++) {\r\n        addSegment({\r\n          yawDelta: 0,\r\n          pitchDelta: i > 5 ? Math.PI / 80 : 0,\r\n          rollDelta: 0,\r\n          lanes: [{ offset: 0, width: 10 }]\r\n        });\r\n      }\r\n      \r\n      // Gap\r\n      for (let i = 0; i < 3 + skip; i++) {\r\n        addSegment({ isGap: true });\r\n      }\r\n      \r\n      // Landing\r\n      for (let i = 0; i < 6; i++) {\r\n        addSegment({\r\n          pitchDelta: i < 3 ? -Math.PI / 60 : 0,\r\n          rollDelta: 0,\r\n          lanes: [{ offset: 0, width: 11 }],\r\n          isBoost: (i === 4 && skip === 1)\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Chronos turn 2 - OPTIMIZED: fewer segments\r\n    for (let i = 0; i < 2; i++) {\r\n      addSegment({ rollDelta: -Math.PI / 10 });\r\n    }\r\n    \r\n    for (let i = 0; i < 12; i++) {\r\n      addSegment({\r\n        yawDelta: -Math.PI / 24,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 10 }]\r\n      });\r\n    }\r\n    \r\n    for (let i = 0; i < 2; i++) {\r\n      addSegment({ rollDelta: Math.PI / 10 });\r\n    }\r\n    \r\n    // Temporal acceleration zone\r\n    for (let i = 0; i < 20; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 11 }],\r\n        isBoost: (i >= 8 && i <= 12)\r\n      });\r\n    }\r\n    \r\n    // Temporal cascade - HEAVILY OPTIMIZED\r\n    for (let cascade = 0; cascade < 2; cascade++) { // Reduced from 3 to 2\r\n      const direction = cascade % 2 === 0 ? 1 : -1;\r\n      \r\n      // Turn with elevation change - fewer segments\r\n      for (let i = 0; i < 8; i++) {\r\n        addSegment({\r\n          yawDelta: direction * Math.PI / 27,\r\n          pitchDelta: -Math.PI / 120,\r\n          rollDelta: 0,\r\n          lanes: [{ offset: 0, width: 9 }]\r\n        });\r\n      }\r\n      \r\n      // Recovery\r\n      for (let i = 0; i < 3; i++) {\r\n        addSegment({\r\n          yawDelta: 0,\r\n          pitchDelta: 0,\r\n          rollDelta: 0,\r\n          isBoostPowerup: (i === 1 && cascade === 0)\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Chronos turn 3 - OPTIMIZED sweeping right\r\n    for (let i = 0; i < 2; i++) {\r\n      addSegment({ rollDelta: Math.PI / 10 });\r\n    }\r\n    \r\n    for (let i = 0; i < 15; i++) {\r\n      addSegment({\r\n        yawDelta: Math.PI / 30,\r\n        pitchDelta: 0, // Removed sin calculation\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 10 }]\r\n      });\r\n    }\r\n    \r\n    for (let i = 0; i < 2; i++) {\r\n      addSegment({ rollDelta: -Math.PI / 10 });\r\n    }\r\n    \r\n    // Time dilation straight\r\n    for (let i = 0; i < 15; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 10 }],\r\n        isBoostPowerup: (i === 7)\r\n      });\r\n    }\r\n    \r\n    // Final time spiral - HEAVILY OPTIMIZED\r\n    for (let i = 0; i < 20; i++) {\r\n      const spiralProgress = i / 20;\r\n      const spiralRadius = 1 - spiralProgress * 0.3;\r\n      \r\n      addSegment({\r\n        yawDelta: Math.PI / 15 * spiralRadius,\r\n        pitchDelta: -Math.PI / 200,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 10 }] // Fixed width for performance\r\n      });\r\n    }\r\n    \r\n    // Temporal stabilization\r\n    for (let i = 0; i < 10; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 11 }]\r\n      });\r\n    }\r\n    \r\n    // Time warp finish\r\n    for (let i = 0; i < 20; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 12 }],\r\n        isBoost: (i >= 8 && i <= 14),\r\n        isFinishLine: (i === 19)\r\n      });\r\n    }\r\n  }\r\n};"],"names":["Level26","addSegment","i","timeWave","skip","cascade","direction","spiralRadius"],"mappings":"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"}