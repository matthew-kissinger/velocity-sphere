{"version":3,"file":"Level29-8-3ZdkvK.js","sources":["../../src/tracks/levels/Level29.js"],"sourcesContent":["/**\r\n * Level 29 - Quantum Tunnels\r\n * Simplified portal-based racing with clear mechanics\r\n * Focus on teleportation as understandable gameplay element\r\n */\r\n\r\nexport default {\r\n  name: \"Quantum Tunnels\",\r\n  description: \"Navigate through quantum portals and energy fields\",\r\n  difficulty: 4,\r\n  shader: \"energy-pulse\",\r\n  skybox: \"space-deep\",\r\n  \r\n  generateTrack(addSegment) {\r\n    // Particle accelerator entrance - wide starting area\r\n    for (let i = 0; i < 15; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        isStartLine: (i === 0),\r\n        lanes: [{ offset: 0, width: 12 }]\r\n      });\r\n    }\r\n    \r\n    // First quantum tunnel - visual pulsing effect\r\n    for (let i = 0; i < 30; i++) {\r\n      const pulseEffect = Math.sin(i * 0.3) * 0.5 + 1;\r\n      \r\n      addSegment({\r\n        yawDelta: Math.sin(i * 0.1) * Math.PI / 120,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 9 * pulseEffect }] // Pulsing width for tunnel effect\r\n      });\r\n    }\r\n    \r\n    // Portal jump 1 - clear teleportation point\r\n    // Wide approach with visual indicator\r\n    for (let i = 0; i < 8; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: i > 5 ? Math.PI / 80 : 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 14 }] // Wide for clear portal entry\r\n      });\r\n    }\r\n    \r\n    // Portal gap\r\n    for (let i = 0; i < 8; i++) {\r\n      addSegment({ isGap: true });\r\n    }\r\n    \r\n    // Portal exit - accelerator straight\r\n    for (let i = 0; i < 25; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: i < 3 ? -Math.PI / 60 : 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 10 }],\r\n        isBoost: (i >= 10 && i <= 15),\r\n        isBoostPowerup: (i === 20)\r\n      });\r\n    }\r\n    \r\n    // Quantum split paths - three-lane choice system\r\n    for (let i = 0; i < 35; i++) {\r\n      const splitProgress = i / 35;\r\n      \r\n      // Three distinct lanes that reconverge\r\n      const laneOptions = [\r\n        { offset: -4, width: 8 }, // Left path\r\n        { offset: 0, width: 8 },  // Center path\r\n        { offset: 4, width: 8 }   // Right path\r\n      ];\r\n      \r\n      // Merge back together gradually\r\n      const mergeOffset = splitProgress > 0.7 ? (1 - splitProgress) / 0.3 : 1;\r\n      \r\n      addSegment({\r\n        yawDelta: Math.sin(i * 0.08) * Math.PI / 150,\r\n        pitchDelta: Math.cos(i * 0.1) * Math.PI / 200,\r\n        rollDelta: 0,\r\n        lanes: laneOptions.map(lane => ({\r\n          offset: lane.offset * mergeOffset,\r\n          width: lane.width\r\n        }))\r\n      });\r\n    }\r\n    \r\n    // Curved quantum tunnel with energy fields\r\n    for (let i = 0; i < 40; i++) {\r\n      const tunnelCurve = Math.sin(i * 0.12);\r\n      const energyPulse = Math.sin(i * 0.4) * 0.3 + 1;\r\n      \r\n      addSegment({\r\n        yawDelta: tunnelCurve * Math.PI / 100,\r\n        pitchDelta: Math.sin(i * 0.15) * Math.PI / 250,\r\n        rollDelta: tunnelCurve * Math.PI / 150, // Gentle banking\r\n        lanes: [{ offset: 0, width: 10 * energyPulse }],\r\n        isBoost: (i === 20),\r\n        isBoostPowerup: (i === 10 || i === 30)\r\n      });\r\n    }\r\n    \r\n    // Portal jump 2 - longer teleportation\r\n    // Buildup section\r\n    for (let i = 0; i < 12; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: i > 8 ? Math.PI / 60 : 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 11 }]\r\n      });\r\n    }\r\n    \r\n    // Extended portal gap\r\n    for (let i = 0; i < 12; i++) {\r\n      addSegment({ isGap: true });\r\n    }\r\n    \r\n    // Unstable exit - slight turbulence\r\n    for (let i = 0; i < 15; i++) {\r\n      const turbulence = Math.max(0, 1 - i / 15);\r\n      \r\n      addSegment({\r\n        yawDelta: Math.sin(i * 0.5) * Math.PI / 200 * turbulence,\r\n        pitchDelta: i < 4 ? -Math.PI / 50 : 0,\r\n        rollDelta: Math.sin(i * 0.3) * Math.PI / 300 * turbulence,\r\n        lanes: [{ offset: 0, width: 10 }]\r\n      });\r\n    }\r\n    \r\n    // Particle accelerator complex - high-speed section\r\n    for (let section = 0; section < 3; section++) {\r\n      // Accelerator straight\r\n      for (let i = 0; i < 20; i++) {\r\n        addSegment({\r\n          yawDelta: 0,\r\n          pitchDelta: 0,\r\n          rollDelta: 0,\r\n          lanes: [{ offset: 0, width: 9 }],\r\n          isBoost: (i >= 8 && i <= 12 && section === 1)\r\n        });\r\n      }\r\n      \r\n      // Banked turn between sections\r\n      if (section < 2) {\r\n        const turnDirection = section === 0 ? 1 : -1;\r\n        \r\n        // Bank in\r\n        for (let i = 0; i < 4; i++) {\r\n          addSegment({\r\n            rollDelta: turnDirection * Math.PI / 24\r\n          });\r\n        }\r\n        \r\n        // Turn\r\n        for (let i = 0; i < 18; i++) {\r\n          addSegment({\r\n            yawDelta: turnDirection * Math.PI / 36,\r\n            pitchDelta: 0,\r\n            rollDelta: 0,\r\n            lanes: [{ offset: 0, width: 10 }]\r\n          });\r\n        }\r\n        \r\n        // Bank out\r\n        for (let i = 0; i < 4; i++) {\r\n          addSegment({\r\n            rollDelta: -turnDirection * Math.PI / 24\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Final portal sequence - rapid succession\r\n    for (let portal = 0; portal < 4; portal++) {\r\n      // Short approach\r\n      for (let i = 0; i < 6; i++) {\r\n        addSegment({\r\n          yawDelta: 0,\r\n          pitchDelta: i > 4 ? Math.PI / 100 : 0,\r\n          rollDelta: 0,\r\n          lanes: [{ offset: 0, width: 11 }]\r\n        });\r\n      }\r\n      \r\n      // Short portal\r\n      for (let i = 0; i < 3; i++) {\r\n        addSegment({ isGap: true });\r\n      }\r\n      \r\n      // Quick recovery\r\n      for (let i = 0; i < 5; i++) {\r\n        addSegment({\r\n          pitchDelta: i < 2 ? -Math.PI / 80 : 0,\r\n          rollDelta: 0,\r\n          lanes: [{ offset: 0, width: 10 }],\r\n          isBoostPowerup: (i === 3 && portal === 2)\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Quantum tunnel finale - pulsing finish\r\n    for (let i = 0; i < 30; i++) {\r\n      const finalPulse = Math.sin(i * 0.2) * 0.4 + 1;\r\n      \r\n      addSegment({\r\n        yawDelta: Math.sin(i * 0.1) * Math.PI / 180,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 12 * finalPulse }],\r\n        isBoost: (i >= 15 && i <= 22),\r\n        isFinishLine: (i === 29)\r\n      });\r\n    }\r\n  }\r\n};"],"names":["Level29","addSegment","i","pulseEffect","splitProgress","laneOptions","mergeOffset","lane","tunnelCurve","energyPulse","turbulence","section","turnDirection","portal","finalPulse"],"mappings":"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"}