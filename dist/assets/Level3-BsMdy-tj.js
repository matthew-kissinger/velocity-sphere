const g={name:"Spectrum",description:"Flowing curves and rhythmic sections with rainbow aesthetics",difficulty:3,shader:"rainbow-flow",skybox:"sunset-vibes",generateTrack(a,I){for(let t=0;t<30;t++)a({yawDelta:0,pitchDelta:0,rollDelta:0,isStartLine:t===0});const h=[{angle:Math.PI/3,segments:18,bank:Math.PI/12},{angle:-Math.PI/4,segments:15,bank:-Math.PI/12}];for(const t of h){const l=t.angle/t.segments,e=t.bank/t.segments;for(let o=0;o<3;o++)a({yawDelta:0,pitchDelta:0,rollDelta:e});for(let o=0;o<t.segments;o++)a({yawDelta:l,pitchDelta:0,rollDelta:0});for(let o=0;o<3;o++)a({yawDelta:0,pitchDelta:0,rollDelta:-e});for(let o=0;o<5;o++)a({yawDelta:0,pitchDelta:0,rollDelta:0})}const f=[{up:8,down:8,angle:Math.PI/12},{up:10,down:10,angle:Math.PI/10}];for(const t of f){for(let l=0;l<t.up;l++)a({pitchDelta:t.angle/t.up});for(let l=0;l<t.down;l++)a({pitchDelta:-t.angle/t.down})}const s=10,i=Math.PI/6;for(let t=0;t<s;t++)a({pitchDelta:i/s});const p=4;for(let t=0;t<p;t++)a({isGap:!0});const r=10;for(let t=0;t<r;t++)a({pitchDelta:-i/r});const n=40,D=1.25;for(let t=0;t<3;t++)a({yawDelta:0,pitchDelta:0,rollDelta:Math.PI/36});const w=Math.PI*2*D/n;for(let t=0;t<n;t++)a({yawDelta:w,pitchDelta:0,rollDelta:0});for(let t=0;t<3;t++)a({yawDelta:0,pitchDelta:0,rollDelta:-Math.PI/36});for(let t=0;t<8;t++)a({yawDelta:0,pitchDelta:0,rollDelta:0});const y=[{yaw:Math.PI/6,segments:6},{yaw:-Math.PI/3,segments:8},{yaw:Math.PI/6,segments:6}];for(const t of y){const l=t.yaw/t.segments;for(let e=0;e<t.segments;e++)a({yawDelta:l,pitchDelta:0,rollDelta:0})}const P=[{ramp:6,gap:3,land:6},{straight:8},{ramp:8,gap:4,land:8}];for(const t of P)if(t.ramp){for(let l=0;l<t.ramp;l++)a({pitchDelta:Math.PI/7/t.ramp});for(let l=0;l<t.gap;l++)a({isGap:!0});for(let l=0;l<t.land;l++)a({pitchDelta:-(Math.PI/7)/t.land})}else if(t.straight)for(let l=0;l<t.straight;l++)a({yawDelta:0,pitchDelta:0,rollDelta:0});const u=25;for(let t=0;t<u;t++){let l;if(t<5){const e=t/5;l=[{offset:-6*e,width:5},{offset:6*e,width:5}]}else if(t<20)l=[{offset:-6,width:5},{offset:6,width:5}];else{const e=1-(t-20)/5;l=[{offset:-6*e,width:5},{offset:6*e,width:5}]}a({lanes:l})}const c=20;for(let t=0;t<c;t++)a({yawDelta:0,pitchDelta:0,rollDelta:0,isFinishLine:t===c-1})}};export{g as default};
//# sourceMappingURL=Level3-BsMdy-tj.js.map
