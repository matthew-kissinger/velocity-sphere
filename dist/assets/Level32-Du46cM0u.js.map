{"version":3,"file":"Level32-Du46cM0u.js","sources":["../../src/tracks/levels/Level32.js"],"sourcesContent":["/**\n * Level 32 - Sakura Spiral\n * Cherry blossom grove with ascending spiral path\n * Beautiful and flowing with petal-strewn track\n */\n\nexport default {\n  name: \"Sakura Spiral\",\n  description: \"Ascend through blooming cherry blossoms\",\n  difficulty: 5,\n  shader: \"sakura-bloom\",\n  skybox: \"sunset-vibes\",\n  \n  generateTrack(addSegment) {\n    // Entrance through blossom grove\n    for (let i = 0; i < 25; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: 0,\n        rollDelta: 0,\n        isStartLine: (i === 0),\n        lanes: [{ offset: 0, width: 15 }] // Extra wide for beauty\n      });\n    }\n    \n    // Begin gentle spiral ascent\n    const spiralLevels = 3; // Three full rotations\n    const segmentsPerLevel = 60;\n    const totalHeight = Math.PI / 8; // Total climb angle\n    \n    for (let level = 0; level < spiralLevels; level++) {\n      const levelProgress = level / spiralLevels;\n      \n      for (let i = 0; i < segmentsPerLevel; i++) {\n        const segmentProgress = i / segmentsPerLevel;\n        const overallProgress = (level * segmentsPerLevel + i) / (spiralLevels * segmentsPerLevel);\n        \n        // Spiral parameters\n        const yawDelta = (Math.PI * 2) / segmentsPerLevel;\n        const pitchDelta = totalHeight / (spiralLevels * segmentsPerLevel);\n        \n        // Width varies for interest\n        const width = 12 + Math.sin(segmentProgress * Math.PI * 2) * 2;\n        \n        // Gentle banking on the spiral\n        const rollDelta = Math.sin(segmentProgress * Math.PI * 2) * Math.PI / 80;\n        \n        addSegment({\n          yawDelta: yawDelta,\n          pitchDelta: pitchDelta,\n          rollDelta: rollDelta,\n          lanes: [{ offset: 0, width: width }],\n          // Add speed pads periodically for the climb\n          isBoost: (i % 10 >= 7)\n        });\n      }\n      \n      // Platform between levels\n      for (let i = 0; i < 10; i++) {\n        addSegment({\n          yawDelta: 0,\n          pitchDelta: 0,\n          rollDelta: 0,\n          lanes: [{ offset: 0, width: 20 }], // Extra wide platform\n          // No powerup needed\n        });\n      }\n    }\n    \n    // Summit celebration area\n    for (let i = 0; i < 15; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: 0,\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 25 }], // Massive summit area\n        // No boost needed at summit\n      });\n    }\n    \n    // Petal fall descent - gentle winding path down\n    const descentSections = [\n      { angle: -Math.PI / 3, segments: 20 },\n      { angle: Math.PI / 4, segments: 18 },\n      { angle: -Math.PI / 3.5, segments: 22 },\n      { angle: Math.PI / 2.8, segments: 24 }\n    ];\n    \n    for (const section of descentSections) {\n      // Smooth turn with descent\n      for (let i = 0; i < section.segments; i++) {\n        const progress = i / section.segments;\n        \n        addSegment({\n          yawDelta: section.angle / section.segments,\n          pitchDelta: -Math.PI / 200, // Much gentler descent - half the steepness\n          rollDelta: (section.angle > 0 ? 1 : -1) * Math.PI / 60 * Math.sin(progress * Math.PI),\n          lanes: [{ offset: 0, width: 14 }]\n        });\n      }\n      \n      // Straight section between turns\n      for (let i = 0; i < 8; i++) {\n        addSegment({\n          yawDelta: 0,\n          pitchDelta: -Math.PI / 240, // Much gentler descent\n          rollDelta: 0,\n          lanes: [{ offset: 0, width: 12 }]\n        });\n      }\n    }\n    \n    // Blossom tunnel finale\n    for (let i = 0; i < 30; i++) {\n      const tunnelProgress = i / 30;\n      \n      // Create gentle side-to-side motion\n      const weave = Math.sin(tunnelProgress * Math.PI * 3) * Math.PI / 200;\n      \n      addSegment({\n        yawDelta: weave,\n        pitchDelta: 0,\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 10 + tunnelProgress * 5 }], // Widening to finish\n        isFinishLine: (i === 29)\n      });\n    }\n  }\n};"],"names":["Level32","addSegment","i","spiralLevels","segmentsPerLevel","totalHeight","level","segmentProgress","yawDelta","pitchDelta","width","rollDelta","descentSections","section","progress","tunnelProgress","weave"],"mappings":"AAMA,MAAAA,EAAe,CACb,KAAM,gBACN,YAAa,0CACb,WAAY,EACZ,OAAQ,eACR,OAAQ,eAER,cAAcC,EAAY,CAExB,QAASC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,SAAU,EACV,WAAY,EACZ,UAAW,EACX,YAAcC,IAAM,EACpB,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,CACxC,CAAO,EAIH,MAAMC,EAAe,EACfC,EAAmB,GACnBC,EAAc,KAAK,GAAK,EAE9B,QAASC,EAAQ,EAAGA,EAAQH,EAAcG,IAAS,CAGjD,QAASJ,EAAI,EAAGA,EAAIE,EAAkBF,IAAK,CACzC,MAAMK,EAAkBL,EAAIE,EAItBI,EAAY,KAAK,GAAK,EAAKJ,EAC3BK,EAAaJ,GAAeF,EAAeC,GAG3CM,EAAQ,GAAK,KAAK,IAAIH,EAAkB,KAAK,GAAK,CAAC,EAAI,EAGvDI,EAAY,KAAK,IAAIJ,EAAkB,KAAK,GAAK,CAAC,EAAI,KAAK,GAAK,GAEtEN,EAAW,CACT,SAAUO,EACV,WAAYC,EACZ,UAAWE,EACX,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAOD,CAAK,CAAE,EAEnC,QAAUR,EAAI,IAAM,CAC9B,CAAS,CACH,CAGA,QAASA,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,SAAU,EACV,WAAY,EACZ,UAAW,EACX,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,CAE1C,CAAS,CAEL,CAGA,QAASC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,SAAU,EACV,WAAY,EACZ,UAAW,EACX,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,CAExC,CAAO,EAIH,MAAMW,EAAkB,CACtB,CAAE,MAAO,CAAC,KAAK,GAAK,EAAG,SAAU,EAAE,EACnC,CAAE,MAAO,KAAK,GAAK,EAAG,SAAU,EAAE,EAClC,CAAE,MAAO,CAAC,KAAK,GAAK,IAAK,SAAU,EAAE,EACrC,CAAE,MAAO,KAAK,GAAK,IAAK,SAAU,EAAE,CAC1C,EAEI,UAAWC,KAAWD,EAAiB,CAErC,QAASV,EAAI,EAAGA,EAAIW,EAAQ,SAAUX,IAAK,CACzC,MAAMY,EAAWZ,EAAIW,EAAQ,SAE7BZ,EAAW,CACT,SAAUY,EAAQ,MAAQA,EAAQ,SAClC,WAAY,CAAC,KAAK,GAAK,IACvB,WAAYA,EAAQ,MAAQ,EAAI,EAAI,IAAM,KAAK,GAAK,GAAK,KAAK,IAAIC,EAAW,KAAK,EAAE,EACpF,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,CAC1C,CAAS,CACH,CAGA,QAASZ,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAW,CACT,SAAU,EACV,WAAY,CAAC,KAAK,GAAK,IACvB,UAAW,EACX,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,CAC1C,CAAS,CAEL,CAGA,QAASC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMa,EAAiBb,EAAI,GAGrBc,EAAQ,KAAK,IAAID,EAAiB,KAAK,GAAK,CAAC,EAAI,KAAK,GAAK,IAEjEd,EAAW,CACT,SAAUe,EACV,WAAY,EACZ,UAAW,EACX,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,GAAKD,EAAiB,EAAG,EACrD,aAAeb,IAAM,EAC7B,CAAO,CACH,CACF,CACF"}