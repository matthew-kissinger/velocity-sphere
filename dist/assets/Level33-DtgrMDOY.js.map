{"version":3,"file":"Level33-DtgrMDOY.js","sources":["../../src/tracks/levels/Level33.js"],"sourcesContent":["/**\r\n * Level 33 - Moonlit Lake\r\n * Serene track skimming across a calm lake surface\r\n * Multiple paths around islands under moonlight\r\n */\r\n\r\nexport default {\r\n  name: \"Moonlit Lake\",\r\n  description: \"Glide across tranquil waters beneath the moon\",\r\n  difficulty: 4,\r\n  shader: \"water-ripple\",\r\n  skybox: \"aurora-dance\",\r\n  \r\n  generateTrack(addSegment) {\r\n    // Lakeside start\r\n    for (let i = 0; i < 20; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        isStartLine: (i === 0),\r\n        lanes: [{ offset: 0, width: 14 }]\r\n      });\r\n    }\r\n    \r\n    // First shoreline curve - following natural lake edge\r\n    const shorelinePath = [\r\n      { angle: Math.PI / 4, segments: 30, description: \"around first bay\" },\r\n      { angle: -Math.PI / 6, segments: 15, description: \"small inlet\" },\r\n      { angle: -Math.PI / 3, segments: 25, description: \"around peninsula\" }\r\n    ];\r\n    \r\n    for (const section of shorelinePath) {\r\n      // Gentle undulating motion like water\r\n      for (let i = 0; i < section.segments; i++) {\r\n        const progress = i / section.segments;\r\n        const wave = Math.sin(progress * Math.PI * 2) * 0.02;\r\n        \r\n        addSegment({\r\n          yawDelta: section.angle / section.segments,\r\n          pitchDelta: wave * Math.PI / 200, // Very subtle elevation changes\r\n          rollDelta: 0,\r\n          lanes: [{ offset: 0, width: 12 }],\r\n          isBoost: (i === Math.floor(section.segments / 2)) // Mid-section boost\r\n        });\r\n      }\r\n      \r\n      // Calm straight between curves\r\n      for (let i = 0; i < 10; i++) {\r\n        addSegment({\r\n          lanes: [{ offset: 0, width: 13 }]\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Island archipelago - multiple path choices\r\n    const islandSection = 60;\r\n    for (let i = 0; i < islandSection; i++) {\r\n      if (i < 10) {\r\n        // Split into three paths\r\n        const factor = i / 10;\r\n        addSegment({\r\n          lanes: [\r\n            { offset: -15 * factor, width: 8 },  // Left path\r\n            { offset: 0, width: 10 },            // Center path\r\n            { offset: 15 * factor, width: 8 }    // Right path\r\n          ]\r\n        });\r\n      } else if (i < 50) {\r\n        // Three paths weaving around islands\r\n        const pathProgress = (i - 10) / 40;\r\n        \r\n        // Each path has different characteristics\r\n        const leftCurve = Math.sin(pathProgress * Math.PI * 2.5) * Math.PI / 120;\r\n        const centerCurve = Math.sin(pathProgress * Math.PI * 1.8 + Math.PI/3) * Math.PI / 100;\r\n        const rightCurve = Math.sin(pathProgress * Math.PI * 2.2 - Math.PI/3) * Math.PI / 110;\r\n        \r\n        addSegment({\r\n          lanes: [\r\n            { offset: -15, width: 8 },  // Twisty left path\r\n            { offset: 0, width: 10 },    // Balanced center path\r\n            { offset: 15, width: 8 }     // Scenic right path\r\n          ],\r\n          yawDelta: centerCurve, // All paths follow center curve base\r\n          isBoostPowerup: (i === 30 && true) // Powerup on center path\r\n        });\r\n      } else {\r\n        // Merge back together\r\n        const factor = 1 - (i - 50) / 10;\r\n        addSegment({\r\n          lanes: [\r\n            { offset: -15 * factor, width: 8 },\r\n            { offset: 0, width: 10 },\r\n            { offset: 15 * factor, width: 8 }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Moonbeam straightaway - wide reflective section\r\n    for (let i = 0; i < 25; i++) {\r\n      addSegment({\r\n        lanes: [{ offset: 0, width: 18 }], // Extra wide\r\n        isBoost: (i >= 10 && i <= 15) // Moonbeam boost zone\r\n      });\r\n    }\r\n    \r\n    // Lily pad slalom - gentle weaving\r\n    const lilyPadZones = 40;\r\n    for (let i = 0; i < lilyPadZones; i++) {\r\n      const weavePattern = Math.sin(i * 0.25) * Math.PI / 80;\r\n      const widthVariation = 12 + Math.sin(i * 0.15) * 2;\r\n      \r\n      addSegment({\r\n        yawDelta: weavePattern,\r\n        lanes: [{ offset: 0, width: widthVariation }]\r\n      });\r\n    }\r\n    \r\n    // Waterfall approach - slight elevation change\r\n    for (let i = 0; i < 12; i++) {\r\n      addSegment({\r\n        pitchDelta: Math.PI / 150, // Gentle climb\r\n        lanes: [{ offset: 0, width: 10 }]\r\n      });\r\n    }\r\n    \r\n    // Behind waterfall section - special moment\r\n    for (let i = 0; i < 20; i++) {\r\n      addSegment({\r\n        pitchDelta: 0,\r\n        yawDelta: Math.PI / 60, // Gentle curve behind falls\r\n        lanes: [{ offset: 0, width: 14 }],\r\n        isBoost: (i === 10) // Hidden boost\r\n      });\r\n    }\r\n    \r\n    // Descent back to lake level\r\n    for (let i = 0; i < 12; i++) {\r\n      addSegment({\r\n        pitchDelta: -Math.PI / 150,\r\n        lanes: [{ offset: 0, width: 12 }]\r\n      });\r\n    }\r\n    \r\n    // Final reflection pool - perfect mirror finish\r\n    const reflectionCircle = 30;\r\n    for (let i = 0; i < reflectionCircle; i++) {\r\n      const circleProgress = i / reflectionCircle;\r\n      \r\n      addSegment({\r\n        yawDelta: -Math.PI / reflectionCircle, // Half circle\r\n        lanes: [{ offset: 0, width: 16 }],\r\n        isBoost: (i >= 20 && i <= 25), // Boost to finish\r\n        isFinishLine: (i === reflectionCircle - 1)\r\n      });\r\n    }\r\n  }\r\n};"],"names":["Level33","addSegment","i","shorelinePath","section","progress","wave","islandSection","factor","pathProgress","centerCurve","lilyPadZones","weavePattern","widthVariation","reflectionCircle"],"mappings":"AAMA,MAAAA,EAAe,CACb,KAAM,eACN,YAAa,gDACb,WAAY,EACZ,OAAQ,eACR,OAAQ,eAER,cAAcC,EAAY,CAExB,QAASC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,SAAU,EACV,WAAY,EACZ,UAAW,EACX,YAAcC,IAAM,EACpB,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,CACxC,CAAO,EAIH,MAAMC,EAAgB,CACpB,CAAE,MAAO,KAAK,GAAK,EAAG,SAAU,GAAI,YAAa,kBAAkB,EACnE,CAAE,MAAO,CAAC,KAAK,GAAK,EAAG,SAAU,GAAI,YAAa,aAAa,EAC/D,CAAE,MAAO,CAAC,KAAK,GAAK,EAAG,SAAU,GAAI,YAAa,kBAAkB,CAC1E,EAEI,UAAWC,KAAWD,EAAe,CAEnC,QAASD,EAAI,EAAGA,EAAIE,EAAQ,SAAUF,IAAK,CACzC,MAAMG,EAAWH,EAAIE,EAAQ,SACvBE,EAAO,KAAK,IAAID,EAAW,KAAK,GAAK,CAAC,EAAI,IAEhDJ,EAAW,CACT,SAAUG,EAAQ,MAAQA,EAAQ,SAClC,WAAYE,EAAO,KAAK,GAAK,IAC7B,UAAW,EACX,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,EAChC,QAAUJ,IAAM,KAAK,MAAME,EAAQ,SAAW,CAAC,CACzD,CAAS,CACH,CAGA,QAASF,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,CAC1C,CAAS,CAEL,CAGA,MAAMM,EAAgB,GACtB,QAASL,EAAI,EAAGA,EAAIK,EAAeL,IACjC,GAAIA,EAAI,GAAI,CAEV,MAAMM,EAASN,EAAI,GACnBD,EAAW,CACT,MAAO,CACL,CAAE,OAAQ,IAAMO,EAAQ,MAAO,CAAC,EAChC,CAAE,OAAQ,EAAG,MAAO,EAAE,EACtB,CAAE,OAAQ,GAAKA,EAAQ,MAAO,CAAC,CAC3C,CACA,CAAS,CACH,SAAWN,EAAI,GAAI,CAEjB,MAAMO,GAAgBP,EAAI,IAAM,GAI1BQ,EAAc,KAAK,IAAID,EAAe,KAAK,GAAK,IAAM,KAAK,GAAG,CAAC,EAAI,KAAK,GAAK,IAGnFR,EAAW,CACT,MAAO,CACL,CAAE,OAAQ,IAAK,MAAO,CAAC,EACvB,CAAE,OAAQ,EAAG,MAAO,EAAE,EACtB,CAAE,OAAQ,GAAI,MAAO,CAAC,CAClC,EACU,SAAUS,EACV,eAAiBR,IAAM,IAAM,EACvC,CAAS,CACH,KAAO,CAEL,MAAMM,EAAS,GAAKN,EAAI,IAAM,GAC9BD,EAAW,CACT,MAAO,CACL,CAAE,OAAQ,IAAMO,EAAQ,MAAO,CAAC,EAChC,CAAE,OAAQ,EAAG,MAAO,EAAE,EACtB,CAAE,OAAQ,GAAKA,EAAQ,MAAO,CAAC,CAC3C,CACA,CAAS,CACH,CAIF,QAASN,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,EAChC,QAAUC,GAAK,IAAMA,GAAK,EAClC,CAAO,EAIH,MAAMS,EAAe,GACrB,QAAST,EAAI,EAAGA,EAAIS,EAAcT,IAAK,CACrC,MAAMU,EAAe,KAAK,IAAIV,EAAI,GAAI,EAAI,KAAK,GAAK,GAC9CW,EAAiB,GAAK,KAAK,IAAIX,EAAI,GAAI,EAAI,EAEjDD,EAAW,CACT,SAAUW,EACV,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAOC,CAAc,CAAE,CACpD,CAAO,CACH,CAGA,QAASX,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,WAAY,KAAK,GAAK,IACtB,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,CACxC,CAAO,EAIH,QAASC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,WAAY,EACZ,SAAU,KAAK,GAAK,GACpB,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,EAChC,QAAUC,IAAM,EACxB,CAAO,EAIH,QAASA,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAW,CACT,WAAY,CAAC,KAAK,GAAK,IACvB,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,CACxC,CAAO,EAIH,MAAMa,EAAmB,GACzB,QAASZ,EAAI,EAAGA,EAAIY,EAAkBZ,IAGpCD,EAAW,CACT,SAAU,CAAC,KAAK,GAAKa,EACrB,MAAO,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAE,CAAE,EAChC,QAAUZ,GAAK,IAAMA,GAAK,GAC1B,aAAeA,IAAMY,EAAmB,CAChD,CAAO,CAEL,CACF"}