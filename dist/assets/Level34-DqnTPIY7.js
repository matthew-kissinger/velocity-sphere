const n={name:"Bamboo Grove",description:"Wind through towering bamboo in dappled sunlight",difficulty:4,shader:"bamboo-forest",skybox:"forest-canopy",generateTrack(s){for(let e=0;e<20;e++)s({yawDelta:0,pitchDelta:0,rollDelta:0,isStartLine:e===0,lanes:[{offset:0,width:11}]});const o=[{pattern:"gentle_left",segments:25},{pattern:"straight",segments:15},{pattern:"s_curve",segments:35},{pattern:"gentle_right",segments:20},{pattern:"tight_weave",segments:30}];for(const e of o)switch(e.pattern){case"gentle_left":for(let t=0;t<e.segments;t++){const a=Math.sin(t*.3)*Math.PI/300;s({yawDelta:-Math.PI/(e.segments*2)+a,pitchDelta:Math.sin(t*.2)*Math.PI/200,lanes:[{offset:0,width:10+Math.sin(t*.1)}]})}break;case"gentle_right":for(let t=0;t<e.segments;t++){const a=Math.sin(t*.25)*Math.PI/280;s({yawDelta:Math.PI/(e.segments*2.2)+a,pitchDelta:Math.cos(t*.15)*Math.PI/180,lanes:[{offset:0,width:10+Math.cos(t*.12)}]})}break;case"s_curve":for(let t=0;t<e.segments;t++){const a=t/e.segments,i=Math.sin(a*Math.PI)*Math.PI/25;s({yawDelta:i,pitchDelta:Math.sin(a*Math.PI*2)*Math.PI/150,lanes:[{offset:0,width:11}]})}break;case"tight_weave":for(let t=0;t<e.segments;t++){const a=Math.sin(t*.4)*Math.PI/60,i=9+Math.abs(Math.sin(t*.4))*3;s({yawDelta:a,lanes:[{offset:0,width:i}]})}break;case"straight":for(let t=0;t<e.segments;t++)s({yawDelta:Math.sin(t*.1)*Math.PI/500,lanes:[{offset:0,width:12}]});break}for(let e=0;e<40;e++){const t=e/40,a=Math.sin(t*Math.PI*1.5)*Math.PI/40;s({yawDelta:a,pitchDelta:Math.sin(t*Math.PI)*Math.PI/100,lanes:[{offset:0,width:8}]})}for(let e=0;e<45;e++)if(e<8)s({lanes:[{offset:0,width:12+e*2}]});else if(e<12){const t=(e-8)/4;s({lanes:[{offset:-10*t,width:9},{offset:10*t,width:9}]})}else if(e<33)s({lanes:[{offset:-10,width:9},{offset:10,width:9}],yawDelta:Math.sin((e-12)*.15)*Math.PI/150});else if(e<37){const t=1-(e-33)/4;s({lanes:[{offset:-10*t,width:9},{offset:10*t,width:9}]})}else s({lanes:[{offset:0,width:20-(e-37)*2}]});for(let e=0;e<35;e++){const t=Math.sin(e*.08)*Math.PI/70;s({yawDelta:t,pitchDelta:0,rollDelta:t*.3,lanes:[{offset:0,width:14}]})}for(let e=0;e<25;e++){const t=e/25;s({yawDelta:0,pitchDelta:-Math.sin(t*Math.PI)*Math.PI/200,lanes:[{offset:0,width:11+t*4}],isFinishLine:e===24})}}};export{n as default};
//# sourceMappingURL=Level34-DqnTPIY7.js.map
