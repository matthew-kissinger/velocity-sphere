{"version":3,"file":"Level38-Bahhtmmq.js","sources":["../../src/tracks/levels/Level38.js"],"sourcesContent":["/**\r\n * Level 38 - Sunset Coast\r\n * Coastal highway at golden hour with sweeping ocean views\r\n * Wide comfortable racing with scenic beauty\r\n */\r\n\r\nexport default {\r\n  name: \"Sunset Coast\",\r\n  description: \"Cruise the coastal highway as the sun sets\",\r\n  difficulty: 5,\r\n  shader: \"ocean-waves\",\r\n  skybox: \"sunset-vibes\",\r\n  \r\n  generateTrack(addSegment) {\r\n    // Coastal highway start\r\n    for (let i = 0; i < 30; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        isStartLine: (i === 0),\r\n        lanes: [{ offset: 0, width: 16 }] // Wide highway\r\n      });\r\n    }\r\n    \r\n    // First coastal sweep - following cliff edge\r\n    const coastalSweep1 = [\r\n      { angle: Math.PI / 3, segments: 35, description: \"around first headland\" },\r\n      { straight: 15 },\r\n      { angle: -Math.PI / 4, segments: 25, description: \"into bay\" },\r\n      { straight: 10 },\r\n      { angle: -Math.PI / 5, segments: 20, description: \"around point\" }\r\n    ];\r\n    \r\n    for (const section of coastalSweep1) {\r\n      if (section.straight) {\r\n        for (let i = 0; i < section.straight; i++) {\r\n          addSegment({\r\n            lanes: [{ offset: 0, width: 15 }],\r\n            isBoost: (i === Math.floor(section.straight / 2))\r\n          });\r\n        }\r\n      } else {\r\n        // Sweeping coastal curves with gentle banking\r\n        for (let i = 0; i < section.segments; i++) {\r\n          const progress = i / section.segments;\r\n          const banking = Math.sin(progress * Math.PI) * Math.PI / 50;\r\n          \r\n          addSegment({\r\n            yawDelta: section.angle / section.segments,\r\n            pitchDelta: Math.sin(progress * Math.PI * 2) * Math.PI / 300, // Gentle road undulation\r\n            rollDelta: (section.angle > 0 ? 1 : -1) * banking,\r\n            lanes: [{ offset: 0, width: 14 + Math.sin(progress * Math.PI) * 2 }]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Beach section - lower elevation near water\r\n    for (let i = 0; i < 15; i++) {\r\n      addSegment({\r\n        pitchDelta: -Math.PI / 200, // Gentle descent to beach\r\n        lanes: [{ offset: 0, width: 18 }]\r\n      });\r\n    }\r\n    \r\n    // Beach cruise - extra wide and flat\r\n    for (let i = 0; i < 40; i++) {\r\n      const beachProgress = i / 40;\r\n      const gentleWeave = Math.sin(beachProgress * Math.PI * 2) * Math.PI / 200;\r\n      \r\n      addSegment({\r\n        yawDelta: gentleWeave,\r\n        pitchDelta: 0,\r\n        lanes: [{ offset: 0, width: 20 }], // Very wide beach section\r\n        isBoost: (i === 17), // Just one boost pad instead of consecutive\r\n        isBoostPowerup: (i === 30)\r\n      });\r\n    }\r\n    \r\n    // Climb back to cliffs\r\n    for (let i = 0; i < 15; i++) {\r\n      addSegment({\r\n        pitchDelta: Math.PI / 180, // Moderate climb\r\n        lanes: [{ offset: 0, width: 16 }]\r\n      });\r\n    }\r\n    \r\n    // Rocky outcrop section - split paths\r\n    for (let i = 0; i < 45; i++) {\r\n      if (i < 8) {\r\n        // Split around rocks\r\n        const factor = i / 8;\r\n        addSegment({\r\n          lanes: [\r\n            { offset: -12 * factor, width: 12 },\r\n            { offset: 12 * factor, width: 12 }\r\n          ]\r\n        });\r\n      } else if (i < 37) {\r\n        // Parallel paths with different views\r\n        const pathProgress = (i - 8) / 29;\r\n        const oceanPath = Math.sin(pathProgress * Math.PI * 2.5) * Math.PI / 150;\r\n        \r\n        addSegment({\r\n          lanes: [\r\n            { offset: -12, width: 12 }, // Inland path\r\n            { offset: 12, width: 12 }   // Ocean view path\r\n          ],\r\n          yawDelta: oceanPath\r\n        });\r\n      } else {\r\n        // Merge paths\r\n        const factor = 1 - (i - 37) / 8;\r\n        addSegment({\r\n          lanes: [\r\n            { offset: -12 * factor, width: 12 },\r\n            { offset: 12 * factor, width: 12 }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Sunset ridge - elevated section with panoramic views\r\n    const ridgeSegments = 50;\r\n    for (let i = 0; i < ridgeSegments; i++) {\r\n      const ridgeProgress = i / ridgeSegments;\r\n      const ridgeCurve = Math.sin(ridgeProgress * Math.PI * 1.5) * Math.PI / 60;\r\n      \r\n      addSegment({\r\n        yawDelta: ridgeCurve,\r\n        pitchDelta: Math.sin(ridgeProgress * Math.PI * 3) * Math.PI / 250,\r\n        rollDelta: ridgeCurve * 0.6,\r\n        lanes: [{ offset: 0, width: 15 }],\r\n        isBoost: (i % 15 === 7)\r\n      });\r\n    }\r\n    \r\n    // Lighthouse curve - dramatic sweep around lighthouse\r\n    const lighthouseSegments = 40;\r\n    for (let i = 0; i < lighthouseSegments; i++) {\r\n      const lighthouseProgress = i / lighthouseSegments;\r\n      \r\n      addSegment({\r\n        yawDelta: (Math.PI * 1.2) / lighthouseSegments, // 216 degree turn\r\n        pitchDelta: 0,\r\n        rollDelta: Math.PI / 60 * Math.sin(lighthouseProgress * Math.PI),\r\n        lanes: [{ offset: 0, width: 14 }]\r\n      });\r\n    }\r\n    \r\n    // Golden hour finale - straight to sunset\r\n    for (let i = 0; i < 35; i++) {\r\n      const finaleProgress = i / 35;\r\n      \r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: -Math.sin(finaleProgress * Math.PI) * Math.PI / 300, // Gentle final dip\r\n        rollDelta: 0,\r\n        lanes: [{ offset: 0, width: 16 + finaleProgress * 8 }], // Widening to finish\r\n        isBoost: (i >= 25 && i <= 30),\r\n        isFinishLine: (i === 34)\r\n      });\r\n    }\r\n  }\r\n};"],"names":["Level38","addSegment","i","coastalSweep1","section","progress","banking","beachProgress","gentleWeave","factor","pathProgress","oceanPath","ridgeSegments","ridgeProgress","ridgeCurve","lighthouseSegments","lighthouseProgress","finaleProgress"],"mappings":"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"}