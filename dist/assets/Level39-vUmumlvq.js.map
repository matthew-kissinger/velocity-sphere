{"version":3,"file":"Level39-vUmumlvq.js","sources":["../../src/tracks/levels/Level39.js"],"sourcesContent":["/**\n * Level 39 - Floating Gardens (COMPLETELY REDESIGNED)\n * Peaceful garden terraces with gentle ramps and no corkscrews\n * Beautiful flowing track through multiple garden levels\n */\n\nexport default {\n  name: \"Floating Gardens\",\n  description: \"Explore terraced gardens floating among the clouds\",\n  difficulty: 6,\n  shader: \"zen-garden\",\n  skybox: \"sunset-vibes\",\n  \n  generateTrack(addSegment) {\n    // Garden entrance terrace\n    for (let i = 0; i < 25; i++) {\n      addSegment({\n        yawDelta: 0,\n        pitchDelta: 0,\n        rollDelta: 0,\n        isStartLine: (i === 0),\n        lanes: [{ offset: 0, width: 16 }]\n      });\n    }\n    \n    // SECTION 1: Rose Garden\n    // Flowing curves through rose beds\n    const roseGardenTurns = [\n      { angle: Math.PI / 4, segments: 30 },\n      { angle: -Math.PI / 3, segments: 35 },\n      { angle: Math.PI / 3.5, segments: 28 },\n      { angle: -Math.PI / 4.5, segments: 25 }\n    ];\n    \n    for (const turn of roseGardenTurns) {\n      // Approach path\n      for (let i = 0; i < 10; i++) {\n        addSegment({\n          yawDelta: 0,\n          pitchDelta: 0,\n          rollDelta: 0,\n          lanes: [{ offset: 0, width: 14 }]\n        });\n      }\n      \n      // Gentle banking entry\n      for (let i = 0; i < 4; i++) {\n        addSegment({\n          rollDelta: (turn.angle > 0 ? 1 : -1) * Math.PI / 120,\n          lanes: [{ offset: 0, width: 13 }]\n        });\n      }\n      \n      // Smooth garden turn\n      for (let i = 0; i < turn.segments; i++) {\n        const progress = i / turn.segments;\n        addSegment({\n          yawDelta: turn.angle / turn.segments,\n          pitchDelta: Math.sin(progress * Math.PI) * Math.PI / 300,\n          rollDelta: 0,\n          lanes: [{ offset: 0, width: 12 }]\n        });\n      }\n      \n      // Banking exit\n      for (let i = 0; i < 4; i++) {\n        addSegment({\n          rollDelta: (turn.angle > 0 ? -1 : 1) * Math.PI / 120,\n          lanes: [{ offset: 0, width: 13 }]\n        });\n      }\n    }\n    \n    // SECTION 2: Water Garden Bridge\n    // Gentle ramp to second level\n    for (let i = 0; i < 20; i++) {\n      addSegment({\n        yawDelta: Math.sin(i * 0.1) * Math.PI / 200,\n        pitchDelta: Math.PI / 200, // Gentle climb\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 12 }],\n        isBoost: (i > 12 && i < 16) // Help with climb\n      });\n    }\n    \n    // Water garden terrace - multiple peaceful paths\n    for (let i = 0; i < 50; i++) {\n      if (i < 10) {\n        // Split around fountain\n        const factor = i / 10;\n        addSegment({\n          lanes: [\n            { offset: -12 * factor, width: 10 },\n            { offset: 0, width: 10 },\n            { offset: 12 * factor, width: 10 }\n          ]\n        });\n      } else if (i < 40) {\n        // Three parallel paths\n        const waterPhase = (i - 10) / 30;\n        addSegment({\n          lanes: [\n            { offset: -12, width: 10 },\n            { offset: 0, width: 10 },\n            { offset: 12, width: 10 }\n          ],\n          yawDelta: Math.sin(waterPhase * Math.PI * 2) * Math.PI / 250,\n          pitchDelta: 0\n        });\n      } else {\n        // Merge paths\n        const factor = 1 - (i - 40) / 10;\n        addSegment({\n          lanes: [\n            { offset: -12 * factor, width: 10 },\n            { offset: 0, width: 10 },\n            { offset: 12 * factor, width: 10 }\n          ]\n        });\n      }\n    }\n    \n    // SECTION 3: Bamboo Grove\n    // Winding path through bamboo\n    for (let i = 0; i < 40; i++) {\n      const grovePhase = i / 40;\n      const grovePath = Math.sin(grovePhase * Math.PI * 3) * Math.PI / 100;\n      \n      addSegment({\n        yawDelta: grovePath,\n        pitchDelta: Math.cos(grovePhase * Math.PI * 2) * Math.PI / 300,\n        rollDelta: grovePath * 0.5,\n        lanes: [{ offset: 0, width: 11 }]\n      });\n    }\n    \n    // SECTION 4: Meditation Plaza\n    // Large circular plaza\n    for (let i = 0; i < 50; i++) {\n      const plazaProgress = i / 50;\n      \n      addSegment({\n        yawDelta: Math.PI * 2 / 50, // Full circle\n        pitchDelta: 0,\n        rollDelta: Math.sin(plazaProgress * Math.PI * 2) * Math.PI / 100,\n        lanes: [{ offset: 0, width: 18 }]\n      });\n    }\n    \n    // SECTION 5: Cherry Blossom Descent\n    // Gentle descent through cherry trees\n    for (let i = 0; i < 60; i++) {\n      const descentPhase = i / 60;\n      const blossomWeave = Math.sin(descentPhase * Math.PI * 4) * Math.PI / 120;\n      \n      addSegment({\n        yawDelta: blossomWeave,\n        pitchDelta: -Math.PI / 250, // Very gentle descent\n        rollDelta: blossomWeave * 0.4,\n        lanes: [{ offset: 0, width: 14 }],\n        isBoost: (i > 40 && i < 45) // Speed boost near end\n      });\n    }\n    \n    // SECTION 6: Garden Finale\n    // Wide finish area\n    for (let i = 0; i < 30; i++) {\n      const finaleProgress = i / 30;\n      \n      addSegment({\n        yawDelta: 0,\n        pitchDelta: 0,\n        rollDelta: 0,\n        lanes: [{ offset: 0, width: 15 + finaleProgress * 10 }],\n        isFinishLine: (i === 29)\n      });\n    }\n  }\n};"],"names":["Level39","addSegment","i","roseGardenTurns","turn","progress","factor","waterPhase","grovePhase","grovePath","plazaProgress","descentPhase","blossomWeave","finaleProgress"],"mappings":"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"}