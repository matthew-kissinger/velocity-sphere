const f={name:"Harmony Circuit",description:"Find perfect balance in the ultimate tranquil race",difficulty:5,shader:"rainbow-flow",skybox:"aurora-dance",generateTrack(s){for(let t=0;t<30;t++)s({yawDelta:0,pitchDelta:0,rollDelta:0,isStartLine:t===0,lanes:[{offset:0,width:20}]});const l=[{angle:Math.PI/3,segments:30,bank:Math.PI/40},{angle:-Math.PI/2,segments:35,bank:-Math.PI/40},{angle:Math.PI/2.5,segments:28,bank:Math.PI/45},{angle:-Math.PI/3,segments:25,bank:-Math.PI/45}];for(const t of l){for(let e=0;e<5;e++)s({rollDelta:t.bank/5,lanes:[{offset:0,width:16}]});for(let e=0;e<t.segments;e++){const a=e/t.segments,o=15+Math.sin(a*Math.PI)*3;s({yawDelta:t.angle/t.segments,pitchDelta:Math.sin(a*Math.PI*2)*Math.PI/300,lanes:[{offset:0,width:o}]})}for(let e=0;e<5;e++)s({rollDelta:-t.bank/5,lanes:[{offset:0,width:16}]});for(let e=0;e<10;e++)s({lanes:[{offset:0,width:15}]})}for(let t=0;t<70;t++)if(t<10){const e=t/10;s({lanes:[{offset:-18*e,width:10},{offset:-6*e,width:10},{offset:6*e,width:10},{offset:18*e,width:10}]})}else if(t<60){const e=(t-10)/50;s({lanes:[{offset:-18,width:10},{offset:-6,width:10},{offset:6,width:10},{offset:18,width:10}],yawDelta:Math.sin(e*Math.PI*3)*Math.PI/200,pitchDelta:Math.cos(e*Math.PI*2)*Math.PI/400})}else{const e=1-(t-60)/10;s({lanes:[{offset:-18*e,width:10},{offset:-6*e,width:10},{offset:6*e,width:10},{offset:18*e,width:10}]})}const h=40;for(let t=0;t<h;t++){const e=t/h;s({yawDelta:Math.PI*2/h,pitchDelta:Math.PI/150,rollDelta:Math.sin(e*Math.PI*2)*Math.PI/60,lanes:[{offset:0,width:14}]})}for(let t=0;t<25;t++)s({lanes:[{offset:0,width:30}]});const i=[{curve:Math.PI/4,length:25},{straight:15},{curve:-Math.PI/3,length:30},{straight:10},{curve:Math.PI/5,length:20}];for(const t of i)if(t.straight)for(let e=0;e<t.straight;e++)s({pitchDelta:-Math.PI/200,lanes:[{offset:0,width:16}]});else for(let e=0;e<t.length;e++){const a=e/t.length;s({yawDelta:t.curve/t.length,pitchDelta:-Math.PI/180,rollDelta:(t.curve>0?1:-1)*Math.PI/70*Math.sin(a*Math.PI),lanes:[{offset:0,width:15+Math.sin(a*Math.PI)*2}]})}for(let t=0;t<30;t++){const a=18+t/30*12;s({yawDelta:0,pitchDelta:0,lanes:[{offset:0,width:a}],isFinishLine:t===29})}}};export{f as default};
//# sourceMappingURL=Level40-BbXZPfvu.js.map
