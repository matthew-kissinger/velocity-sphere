{"version":3,"file":"Level8-CsnC7sk-.js","sources":["../../src/tracks/levels/Level8.js"],"sourcesContent":["/**\r\n * Level 8 - Hyperdrive\r\n * Extreme speed track with energy-charged sections\r\n */\r\n\r\nexport default {\r\n  name: \"Hyperdrive\",\r\n  description: \"Push beyond limits with extreme energy bursts\", \r\n  difficulty: 4,\r\n  shader: \"energy-pulse\", // High-energy shader for extreme track\r\n  skybox: \"aurora-dance\", // Magical aurora for extreme challenge\r\n  \r\n  generateTrack(addSegment) {\r\n    // Starting straight\r\n    for (let i = 0; i < 30; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        isStartLine: (i === 0)\r\n      });\r\n    }\r\n    \r\n    // First banked turn - right with increasing bank\r\n    for (let i = 0; i < 5; i++) {\r\n      addSegment({ rollDelta: Math.PI / 80 }); // Bank in\r\n    }\r\n    for (let i = 0; i < 25; i++) {\r\n      addSegment({ \r\n        yawDelta: Math.PI / 50,\r\n        rollDelta: 0  // Hold bank\r\n      });\r\n    }\r\n    for (let i = 0; i < 5; i++) {\r\n      addSegment({ rollDelta: -Math.PI / 80 }); // Bank out\r\n    }\r\n    \r\n    // Speed section with boost zones for climbing sections\r\n    for (let i = 0; i < 30; i++) {\r\n      addSegment({ \r\n        pitchDelta: -Math.PI / 300, // Gentler downhill\r\n        yawDelta: 0,\r\n        isBoost: i % 10 < 3 // Add boost pads every few segments\r\n      });\r\n    }\r\n    \r\n    // Split path section\r\n    const splitOffset = 8.0;\r\n    const splitWidth = 5.0;\r\n    \r\n    // Split starts\r\n    for (let i = 0; i < 10; i++) {\r\n      const factor = i / 10;\r\n      addSegment({\r\n        lanes: [\r\n          { offset: -splitOffset * factor, width: splitWidth },\r\n          { offset: splitOffset * factor, width: splitWidth }\r\n        ]\r\n      });\r\n    }\r\n    \r\n    // Hold split with different paths\r\n    for (let i = 0; i < 20; i++) {\r\n      addSegment({\r\n        lanes: [\r\n          { offset: -splitOffset, width: splitWidth },\r\n          { offset: splitOffset, width: splitWidth }\r\n        ],\r\n        yawDelta: Math.sin(i * 0.1) * 0.02  // Slight weaving\r\n      });\r\n    }\r\n    \r\n    // Merge back\r\n    for (let i = 0; i < 10; i++) {\r\n      const factor = 1 - (i / 10);\r\n      addSegment({\r\n        lanes: [\r\n          { offset: -splitOffset * factor, width: splitWidth },\r\n          { offset: splitOffset * factor, width: splitWidth }\r\n        ]\r\n      });\r\n    }\r\n    \r\n    // High speed banked left turn\r\n    for (let i = 0; i < 5; i++) {\r\n      addSegment({ rollDelta: -Math.PI / 60 }); // Bank in harder\r\n    }\r\n    for (let i = 0; i < 30; i++) {\r\n      addSegment({ \r\n        yawDelta: -Math.PI / 45,\r\n        rollDelta: 0\r\n      });\r\n    }\r\n    for (let i = 0; i < 5; i++) {\r\n      addSegment({ rollDelta: Math.PI / 60 }); // Bank out\r\n    }\r\n    \r\n    // Chicane section - quick left-right-left\r\n    for (let i = 0; i < 8; i++) {\r\n      addSegment({ yawDelta: -Math.PI / 40 });\r\n    }\r\n    for (let i = 0; i < 16; i++) {\r\n      addSegment({ yawDelta: Math.PI / 40 });\r\n    }\r\n    for (let i = 0; i < 8; i++) {\r\n      addSegment({ yawDelta: -Math.PI / 40 });\r\n    }\r\n    \r\n    // Final banked turn to finish\r\n    for (let i = 0; i < 3; i++) {\r\n      addSegment({ rollDelta: Math.PI / 90 });\r\n    }\r\n    for (let i = 0; i < 20; i++) {\r\n      addSegment({ \r\n        yawDelta: Math.PI / 60,\r\n        rollDelta: 0\r\n      });\r\n    }\r\n    for (let i = 0; i < 3; i++) {\r\n      addSegment({ rollDelta: -Math.PI / 90 });\r\n    }\r\n    \r\n    // Add boost zones before finish for better momentum\r\n    for (let i = 0; i < 10; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        isBoost: true // Boost section before finish\r\n      });\r\n    }\r\n    \r\n    // Sprint to finish\r\n    for (let i = 0; i < 15; i++) {\r\n      addSegment({\r\n        yawDelta: 0,\r\n        pitchDelta: 0,\r\n        rollDelta: 0,\r\n        isFinishLine: (i === 14)\r\n      });\r\n    }\r\n  }\r\n};"],"names":["Level8","addSegment","i","splitOffset","splitWidth","factor"],"mappings":"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"}