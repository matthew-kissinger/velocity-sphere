{"version":3,"file":"bamboo-forest-B-86AQXT.js","sources":["../../src/shaders/bamboo-forest.js"],"sourcesContent":["/**\r\n * Bamboo Forest Shader\r\n * Dappled light filtering through bamboo leaves\r\n * Creates natural, organic track lighting\r\n */\r\n\r\nexport default {\r\n  name: 'bamboo-forest',\r\n  description: 'Dappled sunlight through bamboo creating natural patterns',\r\n  author: 'Velocity Sphere Team',\r\n  version: '1.0.0',\r\n  tags: ['bamboo', 'forest', 'natural', 'circuit-tranquil'],\r\n  performance: 'good',\r\n  \r\n  uniforms: {\r\n    groundColor: { value: [0.25, 0.3, 0.15] },\r\n    sunlitColor: { value: [0.45, 0.5, 0.3] },\r\n    shadowColor: { value: [0.15, 0.2, 0.1] },\r\n    dappleScale: { value: 0.08 },\r\n    windSpeed: { value: 0.2 },\r\n    shadowSoftness: { value: 0.3 }\r\n  },\r\n  \r\n  vertexShader: `\r\n    varying vec3 vPosition;\r\n    varying vec3 vNormal;\r\n    varying vec2 vUv;\r\n    varying vec3 vWorldPosition;\r\n    \r\n    void main() {\r\n      vPosition = position;\r\n      vNormal = normalize(normalMatrix * normal);\r\n      vUv = uv;\r\n      \r\n      vec4 worldPosition = modelMatrix * vec4(position, 1.0);\r\n      vWorldPosition = worldPosition.xyz;\r\n      \r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n    }\r\n  `,\r\n  \r\n  fragmentShader: `\r\n    uniform float time;\r\n    uniform vec3 groundColor;\r\n    uniform vec3 sunlitColor;\r\n    uniform vec3 shadowColor;\r\n    uniform float dappleScale;\r\n    uniform float windSpeed;\r\n    uniform float shadowSoftness;\r\n    \r\n    varying vec3 vPosition;\r\n    varying vec3 vNormal;\r\n    varying vec2 vUv;\r\n    varying vec3 vWorldPosition;\r\n    \r\n    float random(vec2 st) {\r\n      return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\r\n    }\r\n    \r\n    float noise(vec2 st) {\r\n      vec2 i = floor(st);\r\n      vec2 f = fract(st);\r\n      \r\n      float a = random(i);\r\n      float b = random(i + vec2(1.0, 0.0));\r\n      float c = random(i + vec2(0.0, 1.0));\r\n      float d = random(i + vec2(1.0, 1.0));\r\n      \r\n      vec2 u = f * f * (3.0 - 2.0 * f);\r\n      \r\n      return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\r\n    }\r\n    \r\n    float bambooShadow(vec2 p, float t) {\r\n      // Create moving bamboo shadows\r\n      float shadow = 0.0;\r\n      \r\n      // Multiple layers of bamboo\r\n      for (float i = 0.0; i < 3.0; i++) {\r\n        vec2 offset = vec2(sin(t * windSpeed + i * 1.3) * 0.1, 0.0);\r\n        \r\n        // Vertical bamboo stalks\r\n        float stalk = sin((p.x + offset.x) * 30.0 + i * 10.0);\r\n        stalk = smoothstep(0.5, 0.8, abs(stalk));\r\n        \r\n        // Bamboo leaves\r\n        float leaves = noise((p + offset) * dappleScale * 100.0 + vec2(t * windSpeed, 0.0));\r\n        leaves = smoothstep(0.3, 0.7, leaves);\r\n        \r\n        shadow += (1.0 - stalk) * 0.3 + leaves * 0.2;\r\n      }\r\n      \r\n      return clamp(shadow, 0.0, 1.0);\r\n    }\r\n    \r\n    void main() {\r\n      // Base ground color\r\n      vec3 color = groundColor;\r\n      \r\n      // Add natural variation\r\n      float variation = noise(vWorldPosition.xz * 0.05);\r\n      color = mix(color * 0.9, color * 1.1, variation);\r\n      \r\n      // Calculate dappled light\r\n      float shadow = bambooShadow(vWorldPosition.xz * dappleScale, time);\r\n      shadow = smoothstep(0.0, shadowSoftness, shadow);\r\n      \r\n      // Mix between shadow and sunlit areas\r\n      color = mix(sunlitColor, shadowColor, shadow);\r\n      \r\n      // Add subtle moss patches\r\n      float moss = noise(vWorldPosition.xz * 0.02);\r\n      moss = smoothstep(0.6, 0.8, moss);\r\n      vec3 mossColor = vec3(0.2, 0.35, 0.15);\r\n      color = mix(color, mossColor, moss * 0.3);\r\n      \r\n      // Natural lighting\r\n      float lighting = dot(vNormal, normalize(vec3(0.3, 1.0, 0.2))) * 0.5 + 0.5;\r\n      color *= lighting;\r\n      \r\n      // Add gentle ambient occlusion\r\n      float ao = 1.0 - shadow * 0.2;\r\n      color *= ao;\r\n      \r\n      gl_FragColor = vec4(color, 1.0);\r\n    }\r\n  `\r\n};"],"names":["bambooForest"],"mappings":"AAMA,MAAAA,EAAe,CACb,KAAM,gBACN,YAAa,4DACb,OAAQ,uBACR,QAAS,QACT,KAAM,CAAC,SAAU,SAAU,UAAW,kBAAkB,EACxD,YAAa,OAEb,SAAU,CACR,YAAa,CAAE,MAAO,CAAC,IAAM,GAAK,GAAI,CAAC,EACvC,YAAa,CAAE,MAAO,CAAC,IAAM,GAAK,EAAG,CAAC,EACtC,YAAa,CAAE,MAAO,CAAC,IAAM,GAAK,EAAG,CAAC,EACtC,YAAa,CAAE,MAAO,GAAI,EAC1B,UAAW,CAAE,MAAO,EAAG,EACvB,eAAgB,CAAE,MAAO,EAAG,CAChC,EAEE,aAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBd,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAsFlB"}