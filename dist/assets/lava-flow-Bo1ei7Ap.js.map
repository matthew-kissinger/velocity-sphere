{"version":3,"file":"lava-flow-Bo1ei7Ap.js","sources":["../../src/shaders/lava-flow.js"],"sourcesContent":["/**\r\n * Lava Flow Shader\r\n * Molten lava with heat distortion and glowing cracks\r\n * Perfect for volcanic/fire themed tracks\r\n */\r\n\r\nimport * as THREE from 'three';\r\n\r\nexport default {\r\n  name: 'lava-flow',\r\n  description: 'Molten lava surface with flowing patterns and heat glow',\r\n  author: 'Velocity Sphere Team',\r\n  version: '1.0.0',\r\n  tags: ['lava', 'fire', 'volcanic', 'hot', 'glowing'],\r\n  performance: 'medium',\r\n  \r\n  uniforms: {\r\n    lavaColor: { value: new THREE.Color(0xff4400) },\r\n    crackColor: { value: new THREE.Color(0xffff00) },\r\n    cooledColor: { value: new THREE.Color(0x330000) },\r\n    flowSpeed: { value: 0.5 },\r\n    heatIntensity: { value: 2.0 },\r\n    crackSize: { value: 0.3 }\r\n  },\r\n  \r\n  vertexShader: `\r\n    varying vec3 vPosition;\r\n    varying vec3 vNormal;\r\n    varying vec2 vUv;\r\n    varying vec3 vWorldPosition;\r\n    \r\n    void main() {\r\n      vPosition = position;\r\n      vNormal = normalize(normalMatrix * normal);\r\n      vUv = uv;\r\n      \r\n      vec4 worldPosition = modelMatrix * vec4(position, 1.0);\r\n      vWorldPosition = worldPosition.xyz;\r\n      \r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n    }\r\n  `,\r\n  \r\n  fragmentShader: `\r\n    uniform float time;\r\n    uniform vec3 lavaColor;\r\n    uniform vec3 crackColor;\r\n    uniform vec3 cooledColor;\r\n    uniform float flowSpeed;\r\n    uniform float heatIntensity;\r\n    uniform float crackSize;\r\n    \r\n    varying vec3 vPosition;\r\n    varying vec3 vNormal;\r\n    varying vec2 vUv;\r\n    varying vec3 vWorldPosition;\r\n    \r\n    // Noise functions\r\n    float random(vec2 st) {\r\n      return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\r\n    }\r\n    \r\n    float noise(vec2 st) {\r\n      vec2 i = floor(st);\r\n      vec2 f = fract(st);\r\n      float a = random(i);\r\n      float b = random(i + vec2(1.0, 0.0));\r\n      float c = random(i + vec2(0.0, 1.0));\r\n      float d = random(i + vec2(1.0, 1.0));\r\n      vec2 u = f * f * (3.0 - 2.0 * f);\r\n      return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\r\n    }\r\n    \r\n    float fbm(vec2 st) {\r\n      float value = 0.0;\r\n      float amplitude = 0.5;\r\n      for(int i = 0; i < 6; i++) {\r\n        value += amplitude * noise(st);\r\n        st *= 2.0;\r\n        amplitude *= 0.5;\r\n      }\r\n      return value;\r\n    }\r\n    \r\n    void main() {\r\n      vec2 uv = vWorldPosition.xz * 0.1;\r\n      \r\n      // Create flowing lava pattern\r\n      vec2 flowUV = uv + vec2(time * flowSpeed * 0.3, time * flowSpeed * 0.1);\r\n      float lavaPattern = fbm(flowUV * 3.0);\r\n      \r\n      // Create cracks pattern\r\n      float cracks = fbm(uv * 8.0);\r\n      cracks = smoothstep(crackSize, crackSize + 0.1, cracks);\r\n      \r\n      // Create heat waves\r\n      float heatWave = sin(time * 4.0 + lavaPattern * 10.0) * 0.5 + 0.5;\r\n      heatWave = pow(heatWave, 2.0);\r\n      \r\n      // Mix colors based on patterns\r\n      vec3 baseColor = mix(cooledColor, lavaColor, lavaPattern);\r\n      \r\n      // Add glowing cracks\r\n      vec3 color = mix(baseColor, crackColor, cracks * heatWave);\r\n      \r\n      // Add heat glow\r\n      color += lavaColor * heatWave * heatIntensity * 0.3;\r\n      \r\n      // Add pulsing effect\r\n      float pulse = sin(time * 2.0 + lavaPattern * 5.0) * 0.2 + 0.8;\r\n      color *= pulse;\r\n      \r\n      // Apply lighting\r\n      float lighting = dot(vNormal, normalize(vec3(1.0, 1.0, 1.0))) * 0.5 + 0.5;\r\n      color *= lighting;\r\n      \r\n      // Add emissive glow for hot areas\r\n      float emission = max(0.0, lavaPattern - 0.3) * heatIntensity;\r\n      color += lavaColor * emission * 0.5;\r\n      \r\n      gl_FragColor = vec4(color, 1.0);\r\n    }\r\n  `\r\n};"],"names":["lavaFlow","THREE.Color"],"mappings":"uCAQA,MAAAA,EAAe,CACb,KAAM,YACN,YAAa,0DACb,OAAQ,uBACR,QAAS,QACT,KAAM,CAAC,OAAQ,OAAQ,WAAY,MAAO,SAAS,EACnD,YAAa,SAEb,SAAU,CACR,UAAW,CAAE,MAAO,IAAIC,EAAY,QAAQ,CAAC,EAC7C,WAAY,CAAE,MAAO,IAAIA,EAAY,QAAQ,CAAC,EAC9C,YAAa,CAAE,MAAO,IAAIA,EAAY,OAAQ,CAAC,EAC/C,UAAW,CAAE,MAAO,EAAG,EACvB,cAAe,CAAE,MAAO,CAAG,EAC3B,UAAW,CAAE,MAAO,EAAG,CAC3B,EAEE,aAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBd,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAgFlB"}