{"version":3,"file":"matrix-rain-DGKIw-4e.js","sources":["../../src/shaders/matrix-rain.js"],"sourcesContent":["/**\r\n * Matrix Rain Shader\r\n * Digital rain effect inspired by The Matrix\r\n * Perfect for cyberpunk/digital themed tracks\r\n */\r\n\r\nimport * as THREE from 'three';\r\n\r\nexport default {\r\n  name: 'matrix-rain',\r\n  description: 'Digital rain effect with scrolling characters and green glow',\r\n  author: 'Velocity Sphere Team',\r\n  version: '1.0.0',\r\n  tags: ['matrix', 'digital', 'cyberpunk', 'rain', 'code'],\r\n  performance: 'good',\r\n  \r\n  uniforms: {\r\n    primaryColor: { value: new THREE.Color(0x00ff00) },\r\n    backgroundColor: { value: new THREE.Color(0x000000) },\r\n    rainSpeed: { value: 2.5 }, // Reduced from 5.0 to slow down animation\r\n    charDensity: { value: 15.0 },\r\n    brightness: { value: 1.2 }\r\n  },\r\n  \r\n  vertexShader: `\r\n    varying vec3 vPosition;\r\n    varying vec3 vNormal;\r\n    varying vec2 vUv;\r\n    varying vec3 vWorldPosition;\r\n    \r\n    void main() {\r\n      vPosition = position;\r\n      vNormal = normalize(normalMatrix * normal);\r\n      vUv = uv;\r\n      \r\n      vec4 worldPosition = modelMatrix * vec4(position, 1.0);\r\n      vWorldPosition = worldPosition.xyz;\r\n      \r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n    }\r\n  `,\r\n  \r\n  fragmentShader: `\r\n    uniform float time;\r\n    uniform vec3 primaryColor;\r\n    uniform vec3 backgroundColor;\r\n    uniform float rainSpeed;\r\n    uniform float charDensity;\r\n    uniform float brightness;\r\n    \r\n    varying vec3 vPosition;\r\n    varying vec3 vNormal;\r\n    varying vec2 vUv;\r\n    varying vec3 vWorldPosition;\r\n    \r\n    float random(vec2 st) {\r\n      return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\r\n    }\r\n    \r\n    float character(vec2 uv, float seed) {\r\n      // Create character-like patterns\r\n      vec2 grid = floor(uv * charDensity);\r\n      vec2 cell = fract(uv * charDensity);\r\n      \r\n      float rnd = random(grid + seed);\r\n      \r\n      // Create character shapes\r\n      float char = 0.0;\r\n      if (rnd > 0.5) {\r\n        char = step(0.2, cell.x) * step(cell.x, 0.8) * step(0.1, cell.y) * step(cell.y, 0.9);\r\n      } else {\r\n        char = step(0.1, cell.x) * step(cell.x, 0.9) * step(0.2, cell.y) * step(cell.y, 0.8);\r\n      }\r\n      \r\n      return char;\r\n    }\r\n    \r\n    void main() {\r\n      vec2 uv = vWorldPosition.xz * 0.05;\r\n      \r\n      // Create falling rain columns\r\n      float columns = floor(uv.x * 10.0);\r\n      float columnSeed = random(vec2(columns, 0.0));\r\n      \r\n      // Animate rain falling\r\n      float rainY = uv.y + time * rainSpeed * (0.5 + columnSeed);\r\n      \r\n      // Create multiple layers of rain at different speeds\r\n      float rain1 = character(vec2(uv.x, rainY), time * 0.1);\r\n      float rain2 = character(vec2(uv.x, rainY * 0.7 + 100.0), time * 0.15);\r\n      float rain3 = character(vec2(uv.x, rainY * 1.3 + 200.0), time * 0.08);\r\n      \r\n      // Combine rain layers\r\n      float rain = max(rain1, max(rain2 * 0.7, rain3 * 0.5));\r\n      \r\n      // Add fading effect (brighter at top, darker at bottom)\r\n      float fade = 1.0 - fract(rainY);\r\n      fade = pow(fade, 2.0);\r\n      \r\n      // Create streaming effect\r\n      float stream = sin(rainY * 20.0 - time * 10.0) * 0.5 + 0.5;\r\n      stream = pow(stream, 3.0);\r\n      \r\n      // Combine effects\r\n      float intensity = rain * fade * (0.7 + stream * 0.3) * brightness;\r\n      \r\n      // Color mixing\r\n      vec3 color = mix(backgroundColor, primaryColor, intensity);\r\n      \r\n      // Add glow effect\r\n      color += primaryColor * intensity * 0.3;\r\n      \r\n      // Apply lighting\r\n      float lighting = dot(vNormal, normalize(vec3(1.0, 1.0, 1.0))) * 0.5 + 0.5;\r\n      color *= lighting;\r\n      \r\n      gl_FragColor = vec4(color, 1.0);\r\n    }\r\n  `\r\n};"],"names":["matrixRain","THREE.Color"],"mappings":"uCAQA,MAAAA,EAAe,CACb,KAAM,cACN,YAAa,+DACb,OAAQ,uBACR,QAAS,QACT,KAAM,CAAC,SAAU,UAAW,YAAa,OAAQ,MAAM,EACvD,YAAa,OAEb,SAAU,CACR,aAAc,CAAE,MAAO,IAAIC,EAAY,KAAQ,CAAC,EAChD,gBAAiB,CAAE,MAAO,IAAIA,EAAY,CAAQ,CAAC,EACnD,UAAW,CAAE,MAAO,GAAG,EACvB,YAAa,CAAE,MAAO,EAAI,EAC1B,WAAY,CAAE,MAAO,GAAG,CAC5B,EAEE,aAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBd,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA6ElB"}