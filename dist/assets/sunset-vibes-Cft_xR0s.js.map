{"version":3,"file":"sunset-vibes-Cft_xR0s.js","sources":["../../src/skyboxes/sunset-vibes.js"],"sourcesContent":["/**\r\n * Sunset Vibes Skybox\r\n * Bright, colorful sunset gradient with dynamic effects\r\n * Based on the current skybox style\r\n */\r\n\r\nexport default {\r\n  name: 'sunset-vibes',\r\n  description: 'Bright sunset colors with flowing energy',\r\n  author: 'Velocity Sphere Team',\r\n  version: '1.0.0',\r\n  tags: ['sunset', 'colorful', 'energetic', 'default'],\r\n  mood: 'energetic',\r\n  \r\n  uniforms: {\r\n    colorIntensity: { value: 1.2 },\r\n    flowSpeed: { value: 0.5 },\r\n    waveAmplitude: { value: 0.3 }\r\n  },\r\n  \r\n  vertexShader: `\r\n    varying vec3 vWorldPosition;\r\n    varying vec3 vPosition;\r\n    \r\n    void main() {\r\n      vec4 worldPosition = modelMatrix * vec4(position, 1.0);\r\n      vWorldPosition = worldPosition.xyz;\r\n      vPosition = position;\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n    }\r\n  `,\r\n  \r\n  fragmentShader: `\r\n    uniform float time;\r\n    uniform float colorIntensity;\r\n    uniform float flowSpeed;\r\n    uniform float waveAmplitude;\r\n    \r\n    varying vec3 vWorldPosition;\r\n    varying vec3 vPosition;\r\n    \r\n    void main() {\r\n      vec3 direction = normalize(vWorldPosition);\r\n      float y = direction.y;\r\n      \r\n      // Bright sunset gradient\r\n      vec3 topColor = vec3(0.05, 0.0, 0.15);      // Deep purple/black\r\n      vec3 midColor = vec3(0.15, 0.05, 0.25);     // Purple\r\n      vec3 horizonColor = vec3(0.4, 0.15, 0.35);  // Pink/purple\r\n      vec3 bottomColor = vec3(0.2, 0.1, 0.3);     // Darker purple\r\n      \r\n      vec3 color;\r\n      if (y > 0.3) {\r\n        // Upper sky - top to mid transition\r\n        float factor = (y - 0.3) / 0.7;\r\n        color = mix(midColor, topColor, factor);\r\n      } else if (y > -0.1) {\r\n        // Mid sky - horizon glow\r\n        float factor = (y + 0.1) / 0.4;\r\n        color = mix(horizonColor, midColor, factor);\r\n        \r\n        // Add horizontal bands for more visual interest\r\n        float bandPattern = sin(y * 20.0 + time * flowSpeed) * 0.1;\r\n        color += vec3(bandPattern * 0.05, bandPattern * 0.02, bandPattern * 0.08);\r\n      } else {\r\n        // Lower sky \r\n        float factor = (y + 1.0) / 0.9;\r\n        color = mix(bottomColor, horizonColor, factor);\r\n      }\r\n      \r\n      // Add flowing energy effects\r\n      float noise1 = sin(direction.x * 3.0 + time * flowSpeed * 2.0) * waveAmplitude;\r\n      float noise2 = cos(direction.z * 2.5 + time * flowSpeed * 1.5) * waveAmplitude;\r\n      \r\n      // Apply energy waves\r\n      color += vec3(noise1 * 0.02, noise2 * 0.03, (noise1 + noise2) * 0.025);\r\n      \r\n      // Add subtle shimmer\r\n      float shimmer = sin(time * 3.0 + direction.x + direction.z) * 0.05 + 0.95;\r\n      color *= shimmer;\r\n      \r\n      // Apply color intensity\r\n      color *= colorIntensity;\r\n      \r\n      gl_FragColor = vec4(color, 1.0);\r\n    }\r\n  `\r\n};"],"names":["sunsetVibes"],"mappings":"AAMA,MAAAA,EAAe,CACb,KAAM,eACN,YAAa,2CACb,OAAQ,uBACR,QAAS,QACT,KAAM,CAAC,SAAU,WAAY,YAAa,SAAS,EACnD,KAAM,YAEN,SAAU,CACR,eAAgB,CAAE,MAAO,GAAG,EAC5B,UAAW,CAAE,MAAO,EAAG,EACvB,cAAe,CAAE,MAAO,EAAG,CAC/B,EAEE,aAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYd,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAuDlB"}