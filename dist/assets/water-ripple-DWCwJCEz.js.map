{"version":3,"file":"water-ripple-DWCwJCEz.js","sources":["../../src/shaders/water-ripple.js"],"sourcesContent":["/**\r\n * Water Ripple Shader\r\n * Calm water surface with gentle ripples\r\n * Creates a serene, reflective track surface\r\n */\r\n\r\nexport default {\r\n  name: 'water-ripple',\r\n  description: 'Peaceful water surface with gentle ripples',\r\n  author: 'Velocity Sphere Team',\r\n  version: '1.0.0',\r\n  tags: ['water', 'ripple', 'calm', 'circuit-tranquil'],\r\n  performance: 'good',\r\n  \r\n  uniforms: {\r\n    waterColor: { value: [0.2, 0.5, 0.7] },\r\n    foamColor: { value: [0.9, 0.95, 1.0] },\r\n    rippleScale: { value: 0.1 },\r\n    rippleSpeed: { value: 0.5 },\r\n    reflectivity: { value: 0.6 },\r\n    transparency: { value: 0.3 }\r\n  },\r\n  \r\n  vertexShader: `\r\n    varying vec3 vPosition;\r\n    varying vec3 vNormal;\r\n    varying vec2 vUv;\r\n    varying vec3 vWorldPosition;\r\n    varying vec3 vViewPosition;\r\n    \r\n    void main() {\r\n      vPosition = position;\r\n      vNormal = normalize(normalMatrix * normal);\r\n      vUv = uv;\r\n      \r\n      vec4 worldPosition = modelMatrix * vec4(position, 1.0);\r\n      vWorldPosition = worldPosition.xyz;\r\n      \r\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n      vViewPosition = -mvPosition.xyz;\r\n      \r\n      gl_Position = projectionMatrix * mvPosition;\r\n    }\r\n  `,\r\n  \r\n  fragmentShader: `\r\n    uniform float time;\r\n    uniform vec3 waterColor;\r\n    uniform vec3 foamColor;\r\n    uniform float rippleScale;\r\n    uniform float rippleSpeed;\r\n    uniform float reflectivity;\r\n    uniform float transparency;\r\n    \r\n    varying vec3 vPosition;\r\n    varying vec3 vNormal;\r\n    varying vec2 vUv;\r\n    varying vec3 vWorldPosition;\r\n    varying vec3 vViewPosition;\r\n    \r\n    vec3 getNormal(vec2 p) {\r\n      float h1 = sin(p.x * rippleScale + time * rippleSpeed) * 0.1;\r\n      float h2 = sin(p.y * rippleScale * 1.1 + time * rippleSpeed * 0.9) * 0.1;\r\n      float h3 = sin((p.x + p.y) * rippleScale * 0.7 + time * rippleSpeed * 1.1) * 0.05;\r\n      \r\n      float height = h1 + h2 + h3;\r\n      \r\n      vec2 e = vec2(0.01, 0.0);\r\n      vec3 normal = normalize(vec3(\r\n        height - sin((p.x + e.x) * rippleScale + time * rippleSpeed) * 0.1,\r\n        1.0,\r\n        height - sin((p.y + e.x) * rippleScale * 1.1 + time * rippleSpeed * 0.9) * 0.1\r\n      ));\r\n      \r\n      return normal;\r\n    }\r\n    \r\n    void main() {\r\n      // Calculate ripple normals\r\n      vec3 rippleNormal = getNormal(vWorldPosition.xz);\r\n      vec3 normal = normalize(vNormal + rippleNormal * 0.3);\r\n      \r\n      // Basic water color\r\n      vec3 color = waterColor;\r\n      \r\n      // Add depth variation\r\n      float depth = 1.0 - exp(-vWorldPosition.y * 0.1);\r\n      color = mix(color * 0.7, color, depth);\r\n      \r\n      // Fresnel effect\r\n      vec3 viewDir = normalize(vViewPosition);\r\n      float fresnel = pow(1.0 - dot(viewDir, normal), 2.0);\r\n      \r\n      // Sky reflection (simple gradient)\r\n      vec3 skyColor = mix(vec3(0.8, 0.85, 0.9), vec3(0.4, 0.6, 0.8), normal.y);\r\n      color = mix(color, skyColor, fresnel * reflectivity);\r\n      \r\n      // Add foam on ripple peaks\r\n      float foam = sin(vWorldPosition.x * rippleScale * 2.0 + time * rippleSpeed) \r\n                 * sin(vWorldPosition.z * rippleScale * 2.0 + time * rippleSpeed * 0.8);\r\n      foam = smoothstep(0.7, 0.9, foam);\r\n      color = mix(color, foamColor, foam * 0.5);\r\n      \r\n      // Caustics effect\r\n      float caustics = sin(vWorldPosition.x * 0.5 + time) * sin(vWorldPosition.z * 0.5 - time * 0.7);\r\n      caustics = smoothstep(0.0, 1.0, caustics) * 0.2;\r\n      color += vec3(caustics) * waterColor;\r\n      \r\n      // Subtle transparency effect\r\n      float alpha = 1.0 - transparency * (1.0 - fresnel);\r\n      \r\n      gl_FragColor = vec4(color, alpha);\r\n    }\r\n  `\r\n};"],"names":["waterRipple"],"mappings":"AAMA,MAAAA,EAAe,CACb,KAAM,eACN,YAAa,6CACb,OAAQ,uBACR,QAAS,QACT,KAAM,CAAC,QAAS,SAAU,OAAQ,kBAAkB,EACpD,YAAa,OAEb,SAAU,CACR,WAAY,CAAE,MAAO,CAAC,GAAK,GAAK,EAAG,CAAC,EACpC,UAAW,CAAE,MAAO,CAAC,GAAK,IAAM,CAAG,CAAC,EACpC,YAAa,CAAE,MAAO,EAAG,EACzB,YAAa,CAAE,MAAO,EAAG,EACzB,aAAc,CAAE,MAAO,EAAG,EAC1B,aAAc,CAAE,MAAO,EAAG,CAC9B,EAEE,aAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAsBd,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAqElB"}