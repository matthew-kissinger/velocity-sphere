{"version":3,"file":"zen-garden-B-a_FCdk.js","sources":["../../src/shaders/zen-garden.js"],"sourcesContent":["/**\r\n * Zen Garden Shader\r\n * Creates a raked sand pattern with subtle movement\r\n * Perfect for peaceful, meditative tracks\r\n */\r\n\r\nexport default {\r\n  name: 'zen-garden',\r\n  description: 'Raked sand patterns with gentle flow',\r\n  author: 'Velocity Sphere Team',\r\n  version: '1.0.0',\r\n  tags: ['zen', 'sand', 'peaceful', 'circuit-tranquil'],\r\n  performance: 'good',\r\n  \r\n  uniforms: {\r\n    sandColor1: { value: [0.95, 0.92, 0.88] },\r\n    sandColor2: { value: [0.88, 0.85, 0.80] },\r\n    rakeWidth: { value: 0.15 },\r\n    rakeDepth: { value: 0.3 },\r\n    flowSpeed: { value: 0.1 },\r\n    patternScale: { value: 0.05 }\r\n  },\r\n  \r\n  vertexShader: `\r\n    varying vec3 vPosition;\r\n    varying vec3 vNormal;\r\n    varying vec2 vUv;\r\n    varying vec3 vWorldPosition;\r\n    \r\n    void main() {\r\n      vPosition = position;\r\n      vNormal = normalize(normalMatrix * normal);\r\n      vUv = uv;\r\n      \r\n      vec4 worldPosition = modelMatrix * vec4(position, 1.0);\r\n      vWorldPosition = worldPosition.xyz;\r\n      \r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n    }\r\n  `,\r\n  \r\n  fragmentShader: `\r\n    uniform float time;\r\n    uniform vec3 sandColor1;\r\n    uniform vec3 sandColor2;\r\n    uniform float rakeWidth;\r\n    uniform float rakeDepth;\r\n    uniform float flowSpeed;\r\n    uniform float patternScale;\r\n    \r\n    varying vec3 vPosition;\r\n    varying vec3 vNormal;\r\n    varying vec2 vUv;\r\n    varying vec3 vWorldPosition;\r\n    \r\n    float random(vec2 st) {\r\n      return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\r\n    }\r\n    \r\n    void main() {\r\n      // Create flowing rake patterns\r\n      float pattern = sin((vWorldPosition.x + vWorldPosition.z * 0.5) * patternScale + time * flowSpeed);\r\n      pattern += sin((vWorldPosition.x * 0.7 - vWorldPosition.z) * patternScale * 1.3 + time * flowSpeed * 0.7) * 0.5;\r\n      pattern = smoothstep(-rakeWidth, rakeWidth, pattern);\r\n      \r\n      // Add subtle sand texture\r\n      float sand = random(vWorldPosition.xz * 0.1);\r\n      sand = mix(0.9, 1.1, sand);\r\n      \r\n      // Blend between sand colors based on pattern\r\n      vec3 color = mix(sandColor2, sandColor1, pattern);\r\n      color *= sand;\r\n      \r\n      // Soft lighting\r\n      float lighting = dot(vNormal, normalize(vec3(1.0, 2.0, 0.5))) * 0.4 + 0.6;\r\n      color *= lighting;\r\n      \r\n      // Add depth to rakes\r\n      float rakeShading = 1.0 - (1.0 - pattern) * rakeDepth;\r\n      color *= rakeShading;\r\n      \r\n      // Subtle ambient occlusion in rakes\r\n      color *= mix(0.85, 1.0, pattern);\r\n      \r\n      gl_FragColor = vec4(color, 1.0);\r\n    }\r\n  `\r\n};"],"names":["zenGarden"],"mappings":"AAMA,MAAAA,EAAe,CACb,KAAM,aACN,YAAa,uCACb,OAAQ,uBACR,QAAS,QACT,KAAM,CAAC,MAAO,OAAQ,WAAY,kBAAkB,EACpD,YAAa,OAEb,SAAU,CACR,WAAY,CAAE,MAAO,CAAC,IAAM,IAAM,GAAI,CAAC,EACvC,WAAY,CAAE,MAAO,CAAC,IAAM,IAAM,EAAI,CAAC,EACvC,UAAW,CAAE,MAAO,GAAI,EACxB,UAAW,CAAE,MAAO,EAAG,EACvB,UAAW,CAAE,MAAO,EAAG,EACvB,aAAc,CAAE,MAAO,GAAI,CAC/B,EAEE,aAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBd,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA8ClB"}